Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   1


PC     Object              F  Line    Source terminal.src
                           A     1    ; Z8 Encore! ANSI C Compiler Release 3.80
                           A     2    ; -nolocalcse -optsize -fastcall -const=RA
                           A     3    ; -nooptlink -noregvar -reduceopt -debug -
                           A     4    ; -alias 
                           A     5        DEFINE terminal_TEXT,SPACE=ROM
                           A     6        FILE    ".\terminal.c"
                           A     7    .debug "C"
                           A     8        SEGMENT ROM_DATA
                           A     9    
                           A    10    
                           A    11    ;**************************** _unlockFlash
                           A    12    ;Name                         Addr/Registe
                           A    13    
                           A    14    
                           A    15    ; Aggregate Stack Size: 0 (words)
                           A    16    
                           A    17    
                           A    18        .FRAME _n_unlockFlash,?_n_unlockFlash,
                           A    19        .FRAME _f_unlockFlash,?_f_unlockFlash,
                           A    20        SEGMENT terminal_TEXT
                           A    21    .begrec "fmt_type",10
                           A    22    .define "flags"
                           A    23    .value 0
                           A    24    .class 8
                           A    25    .type 2
                           A    26    .endef
                           A    27    .define "size"
                           A    28    .value 1
                           A    29    .class 8
                           A    30    .type 2
                           A    31    .endef
                           A    32    .define "space"
                           A    33    .value 2
                           A    34    .class 8
                           A    35    .type 2
                           A    36    .endef
                           A    37    .define "type"
                           A    38    .value 3
                           A    39    .class 8
                           A    40    .type 2
                           A    41    .endef
                           A    42    .define "field_width"
                           A    43    .value 4
                           A    44    .class 8
                           A    45    .type 2
                           A    46    .endef
                           A    47    .define "precision"
                           A    48    .value 5
                           A    49    .class 8
                           A    50    .type 2
                           A    51    .endef
                           A    52    .define "print_leading_char"
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   2


PC     Object              F  Line    Source terminal.src
                           A    53    .value 6
                           A    54    .class 8
                           A    55    .type 2
                           A    56    .endef
                           A    57    .define "dest"
                           A    58    .value 7
                           A    59    .class 8
                           A    60    .type 162
                           A    61    .endef
                           A    62    .define "print_len"
                           A    63    .value 9
                           A    64    .class 8
                           A    65    .type 12
                           A    66    .endef
                           A    67    .endrec "fmt_type"
                           A    68    .begrec "flt_fmt_data",5
                           A    69    .define "pad_whole"
                           A    70    .value 0
                           A    71    .class 8
                           A    72    .type 12
                           A    73    .endef
                           A    74    .define "pad_pre_fract"
                           A    75    .value 1
                           A    76    .class 8
                           A    77    .type 12
                           A    78    .endef
                           A    79    .define "pad_post_fract"
                           A    80    .value 2
                           A    81    .class 8
                           A    82    .type 12
                           A    83    .endef
                           A    84    .define "pad_at"
                           A    85    .value 3
                           A    86    .class 8
                           A    87    .type 162
                           A    88    .endef
                           A    89    .endrec "flt_fmt_data"
                           A    90    .begrec "fmt_control_data",2
                           A    91    .define "status"
                           A    92    .value 0
                           A    93    .class 8
                           A    94    .type 2
                           A    95    .endef
                           A    96    .define "chr"
                           A    97    .value 1
                           A    98    .class 8
                           A    99    .type 2
                           A   100    .endef
                           A   101    .endrec "fmt_control_data"
                           A   102    .begrec "_set_type",4
                           A   103    .define "begin"
                           A   104    .value 0
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   3


PC     Object              F  Line    Source terminal.src
                           A   105    .class 8
                           A   106    .type 162
                           A   107    .endef
                           A   108    .define "end"
                           A   109    .value 2
                           A   110    .class 8
                           A   111    .type 162
                           A   112    .endef
                           A   113    .endrec "_set_type"
                           A   114    .begrec "near_set_type",2
                           A   115    .define "begin"
                           A   116    .value 0
                           A   117    .class 8
                           A   118    .type 130
                           A   119    .endef
                           A   120    .define "end"
                           A   121    .value 1
                           A   122    .class 8
                           A   123    .type 130
                           A   124    .endef
                           A   125    .endrec "near_set_type"
                           A   126    .begrec "far_set_type",4
                           A   127    .define "begin"
                           A   128    .value 0
                           A   129    .class 8
                           A   130    .type 162
                           A   131    .endef
                           A   132    .define "end"
                           A   133    .value 2
                           A   134    .class 8
                           A   135    .type 162
                           A   136    .endef
                           A   137    .endrec "far_set_type"
                           A   138    .begrec "rom_set_type",4
                           A   139    .define "begin"
                           A   140    .value 0
                           A   141    .class 8
                           A   142    .type 194
                           A   143    .endef
                           A   144    .define "end"
                           A   145    .value 2
                           A   146    .class 8
                           A   147    .type 194
                           A   148    .endef
                           A   149    .endrec "rom_set_type"
                           A   150    .begrec "flt_info",12
                           A   151    .define "flags"
                           A   152    .value 0
                           A   153    .class 8
                           A   154    .type 12
                           A   155    .endef
                           A   156    .define "exp"
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   4


PC     Object              F  Line    Source terminal.src
                           A   157    .value 1
                           A   158    .class 8
                           A   159    .type 2
                           A   160    .endef
                           A   161    .define "digits"
                           A   162    .value 2
                           A   163    .class 8
                           A   164    .dim 10
                           A   165    .type 108
                           A   166    .endef
                           A   167    .endrec "flt_info"
                           A   168    .begrec "NONAME0",6
                           A   169    .define "baudRate"
                           A   170    .value 0
                           A   171    .class 8
                           A   172    .type 5
                           A   173    .endef
                           A   174    .define "stopBits"
                           A   175    .value 4
                           A   176    .class 8
                           A   177    .type 12
                           A   178    .endef
                           A   179    .define "parity"
                           A   180    .value 5
                           A   181    .class 8
                           A   182    .type 12
                           A   183    .endef
                           A   184    .endrec "NONAME0"
                           A   185    .begrec "NONAME1",5
                           A   186    .define "pBuffer"
                           A   187    .value 0
                           A   188    .class 8
                           A   189    .type 172
                           A   190    .endef
                           A   191    .define "next_in"
                           A   192    .value 2
                           A   193    .class 8
                           A   194    .type 12
                           A   195    .endef
                           A   196    .define "next_out"
                           A   197    .value 3
                           A   198    .class 8
                           A   199    .type 12
                           A   200    .endef
                           A   201    .define "size"
                           A   202    .value 4
                           A   203    .class 8
                           A   204    .type 12
                           A   205    .endef
                           A   206    .endrec "NONAME1"
0000                       A   207    _unlockFlash:
                           A   208    .define "_unlockFlash"
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   5


PC     Object              F  Line    Source terminal.src
                           A   209    .value _unlockFlash
                           A   210    .class 2
                           A   211    .type 65
                           A   212    .endef
                           A   213    .begfunc "unlockFlash",4,"_unlockFlash"
0000 D6 0000               A   214        CALL    __b_frameset00
                           A   215    .line 5
0003 A9020FF8              A   216        CPX 4088,#2
0007 6B 1A                 A   217        JR  Z,_1_L_8
0009 A9030FF8              A   218        CPX 4088,#3
000D 6B 14                 A   219        JR  Z,_1_L_8
                           A   220    .line 6
000F E9730FF8              A   221        LDX 4088,#115
0013                       A   222    _1_L_3:
                           A   223    .line 7
0013 A9010FF8              A   224        CPX 4088,#1
0017 EB FA                 A   225        JR  NE,_1_L_3
                           A   226    .line 9
0019 E98C0FF8              A   227        LDX 4088,#140
001D                       A   228    _1_L_6:
                           A   229    .line 10
001D A9020FF8              A   230        CPX 4088,#2
0021 EB FA                 A   231        JR  NE,_1_L_6
0023                       A   232    _1_L_8:
                           A   233    .line 11
0023 D6 0000               A   234        CALL    __b_framereset
0026 AF                    A   235        RET 
                           A   236    .endfunc "unlockFlash",11,"_unlockFlash"
                           A   237        SEGMENT ROM_DATA
                           A   238    
                           A   239    
                           A   240    ;**************************** _checkFlash 
                           A   241    ;Name                         Addr/Registe
                           A   242    
                           A   243    
                           A   244    ; Aggregate Stack Size: 0 (words)
                           A   245    
                           A   246    
                           A   247        .FRAME _n_checkFlash,?_n_checkFlash,RD
                           A   248        .FRAME _f_checkFlash,?_f_checkFlash,ED
                           A   249        SEGMENT terminal_TEXT
0027                       A   250    _checkFlash:
                           A   251    .define "_checkFlash"
                           A   252    .value _checkFlash
                           A   253    .class 2
                           A   254    .type 76
                           A   255    .endef
                           A   256    .begfunc "checkFlash",13,"_checkFlash"
0027 D6 0000               A   257        CALL    __b_frameset00
                           A   258    .line 14
002A 840FF8                A   259        LDX R0,4088
                           A   260    .line 15
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   6


PC     Object              F  Line    Source terminal.src
002D D6 0000               A   261        CALL    __b_framereset
0030 AF                    A   262        RET 
                           A   263    .endfunc "checkFlash",15,"_checkFlash"
                           A   264        SEGMENT FAR_DATA
0000                       A   265    _address:
0000 0400                  A   266        DW  1024
                           A   267    .define "address"
                           A   268    .alias "_address"
                           A   269    .class 69
                           A   270    .value _address
                           A   271    .type 13
                           A   272    .endef
                           A   273        SEGMENT FAR_BSS
0000                       A   274    _length:
0000                       A   275        DS  2*1
                           A   276    .define "length"
                           A   277    .alias "_length"
                           A   278    .class 83
                           A   279    .value _length
                           A   280    .type 13
                           A   281    .endef
                           A   282        SEGMENT FAR_DATA
0002                       A   283    _character:
0002 00                    A   284        DB  0
                           A   285    .define "character"
                           A   286    .alias "_character"
                           A   287    .class 69
                           A   288    .value _character
                           A   289    .type 12
                           A   290    .endef
                           A   291        SEGMENT ROM_DATA
                           A   292    ;   Jump Table for Switch Statement at lin
0000                       A   293    L__8:
0000 000E                  A   294        DW  14
0002 002A                  A   295        DW  42
0004 005B                  A   296        DW  _3_L_10
0006 0030                  A   297        DW  48
0008 0196                  A   298        DW  _3_L_21
000A 0031                  A   299        DW  49
000C 0183                  A   300        DW  _3_L_18
000E 0040                  A   301        DW  64
0010 0307                  A   302        DW  _3_L_44
0012 0041                  A   303        DW  65
0014 019C                  A   304        DW  _3_L_22
0016 0042                  A   305        DW  66
0018 0307                  A   306        DW  _3_L_40
001A 0045                  A   307        DW  69
001C 0307                  A   308        DW  _3_L_41
001E 0052                  A   309        DW  82
0020 0307                  A   310        DW  _3_L_43
0022 0055                  A   311        DW  85
0024 0216                  A   312        DW  _3_L_32
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   7


PC     Object              F  Line    Source terminal.src
0026 0056                  A   313        DW  86
0028 0307                  A   314        DW  _3_L_42
002A 0057                  A   315        DW  87
002C 0307                  A   316        DW  _3_L_45
002E 0064                  A   317        DW  100
0030 0263                  A   318        DW  _3_L_33
0032 0074                  A   319        DW  116
0034 02D8                  A   320        DW  _3_L_38
0036 0075                  A   321        DW  117
0038 02EC                  A   322        DW  _3_L_39
003A 0307                  A   323        DW  _3_L_46
                           A   324    ;   Jump Table for Switch Statement at lin
003C                       A   325    L__10:
003C 0003                  A   326        DW  3
003E 003F                  A   327        DW  63
0040 012C                  A   328        DW  _3_L_13
0042 0052                  A   329        DW  82
0044 006E                  A   330        DW  _3_L_11
0046 0057                  A   331        DW  87
0048 0084                  A   332        DW  _3_L_12
004A 0179                  A   333        DW  _3_L_14
                           A   334    
                           A   335    
                           A   336    ;**************************** _isr_uart0_r
                           A   337    ;Name                         Addr/Registe
                           A   338    ;_length                             STATI
                           A   339    ;_address                            STATI
                           A   340    ;_byte_response                      IMPOR
                           A   341    ;_sync_ok_response                   IMPOR
                           A   342    ;_string_response                    IMPOR
                           A   343    ;___print_putch                      IMPOR
                           A   344    ;__u_ustoa                           IMPOR
                           A   345    ;___print_putromstring0              IMPOR
                           A   346    ;_character                          STATI
                           A   347    ;_putch                              IMPOR
                           A   348    ;_f_puts                             IMPOR
                           A   349    ;_getch                              IMPOR
                           A   350    ;addrPtr                            RR14-3
                           A   351    ;str                                RR14-3
                           A   352    ;inputch                            RR14-2
                           A   353    ;str                                RR14-2
                           A   354    ;buffPtr                            RR14-1
                           A   355    ;ch2                                RR14-1
                           A   356    ;newAddress                         RR14-1
                           A   357    ;___clr_print_fmt                    IMPOR
                           A   358    
                           A   359    
                           A   360    ; Aggregate Stack Size: -40 (words)
                           A   361    
                           A   362    
                           A   363        SEGMENT FAR_TXT
0000                       A   364    L__9:
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   8


PC     Object              F  Line    Source terminal.src
0000 0A                    A   365        DB  10
0001 55415254 20546572     A   366        DB  "UART Terminal"
0009 6D696E61 6C 
000E 0A                    A   367        DB  10
000F 3D3D3D                A   368        DB  "==="
0012 0A0A                  A   369        DB  10,10
0014 54797065 20612063     A   370        DB  "Type a command to begin."
001C 6F6D6D61 6E642074 
0024 6F206265 67696E2E 
002C 0A00                  A   371        DB  10,0
002E                       A   372    L__11:
002E 52656164 696E6720     A   373        DB  "Reading byte from memory."
0036 62797465 2066726F 
003E 6D206D65 6D6F7279 2E 
0047 0A00                  A   374        DB  10,0
0049                       A   375    L__12:
0049 0A0A                  A   376        DB  10,10
004B 53756363 6573732E     A   377        DB  "Success."
0053 00                    A   378        DB  0
0054                       A   379    L__13:
0054 57726974 696E6720     A   380        DB  "Writing byte to memory. Reboot to
005C 62797465 20746F20 
0064 6D656D6F 72792E20 
006C 5265626F 6F742074 
0074 6F206368 65636B20 
007C 746F2073 65652069 
0084 66206974 20686173 
008C 20777269 7474656E 2E 
0095 0A00                  A   381        DB  10,0
0097                       A   382    L__14:
0097 466C6173 68207374 6174   A   383        DB  "Flash stat"
00A1 0A                    A   384        DB  10
00A2 3D3D                  A   385        DB  "=="
00A4 00                    A   386        DB  0
00A5                       A   387    L__17:
00A5 466C6173 68207374 6174   A   388        DB  "Flash stat"
00AF 0A                    A   389        DB  10
00B0 3D3D                  A   390        DB  "=="
00B2 00                    A   391        DB  0
00B3                       A   392    L__18:
00B3 53756363 6573732E     A   393        DB  "Success."
00BB 0A00                  A   394        DB  10,0
00BD                       A   395    L__19:
00BD 466C6173 68207374 6174   A   396        DB  "Flash stat"
00C7 0A                    A   397        DB  10
00C8 3D3D                  A   398        DB  "=="
00CA 00                    A   399        DB  0
00CB                       A   400    L__21:
00CB 6E6F7446 6F756E64     A   401        DB  "notFound"
00D3 00                    A   402        DB  0
                           A   403        .FRAME _i_isr_uart0_rx,?_i_isr_uart0_r
                           A   404        .FCALL _n___clr_print_fmt
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:   9


PC     Object              F  Line    Source terminal.src
                           A   405        .FCALL _n_getch
                           A   406        .FCALL _n_f_puts
                           A   407        .FCALL _n_putch
                           A   408        .FCALL _n___print_putromstring0
                           A   409        .FCALL _n__u_ustoa
                           A   410        .FCALL _n_checkFlash
                           A   411        .FCALL _n___print_putch
                           A   412        .FCALL _n_unlockFlash
                           A   413        .FCALL _n_string_response
                           A   414        .FCALL _n_sync_ok_response
                           A   415        .FCALL _n_byte_response
                           A   416        .FRAME _if_isr_uart0_rx,?_if_isr_uart0
                           A   417        .FCALL _f___clr_print_fmt
                           A   418        .FCALL _f_getch
                           A   419        .FCALL _f_f_puts
                           A   420        .FCALL _f_putch
                           A   421        .FCALL _f___print_putromstring0
                           A   422        .FCALL _f__u_ustoa
                           A   423        .FCALL _f_checkFlash
                           A   424        .FCALL _f___print_putch
                           A   425        .FCALL _f_unlockFlash
                           A   426        .FCALL _f_string_response
                           A   427        .FCALL _f_sync_ok_response
                           A   428        .FCALL _f_byte_response
                           A   429        SEGMENT TEXT
0000                       A   430    L__23:
0000 5A382045 6E636F72     A   431        DB  "Z8 Encore! STK"
0008 65212053 544B 
000E 00                    A   432        DB  0
                           A   433        SEGMENT ROM_TEXT
0000                       A   434    L__15:
0000 3078                  A   435        DB  "0x"
0002 00                    A   436        DB  0
0003                       A   437    L__16:
0003 3078                  A   438        DB  "0x"
0005 00                    A   439        DB  0
0006                       A   440    L__20:
0006 3078                  A   441        DB  "0x"
0008 00                    A   442        DB  0
                           A   443    ;    1  #include "terminal.h"
                           A   444    ;    2  #include "stk500.h"
                           A   445    ;    3  #include "util.h"
                           A   446    ;    4  #include "boot_tools.h"
                           A   447    ;    5  #include "flash_tools.h"
                           A   448    ;    6  
                           A   449    ;    7  register UINT16 address = 0x400; /
                           A   450    ;    8  register UINT16 length;
                           A   451    ;    9  
                           A   452    ;   10  #define RAMSTART  (0x100)
                           A   453    ;   11  #define NRWWSTART (0x1800)
                           A   454    ;   12  #define buff      ((UINT8*)(RAMSTA
                           A   455    ;   13  UINT8 character = ((UINT8)((void*)
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  10


PC     Object              F  Line    Source terminal.src
                           A   456        SEGMENT terminal_TEXT
                           A   457    ;   14  
                           A   458    ;   15  //////////////////////////////////
                           A   459    ;   16  //Interrupt routine
                           A   460    ;   17  
                           A   461    ;   18  #pragma interrupt
                           A   462    ;   19  void isr_uart0_rx(void) 
                           A   463    ;   20  {
0031                       A   464    _isr_uart0_rx:
                           A   465    .define "_isr_uart0_rx"
                           A   466    .value _isr_uart0_rx
                           A   467    .class 2
                           A   468    .type 65
                           A   469    .endef
                           A   470    .begfunc "isr_uart0_rx",20,"_isr_uart0_rx"
0031 C8FFD0                A   471        PUSHX   4093
0034 E8 000FFD             A   472        LDX 4093,__intrp
0038 09100000              A   473        ADDX    __intrp,#16
003C 5C28                  A   474        LD  R5,#40
003E D6 0000               A   475        CALL    __b_frameset0
                           A   476    .line 20
0041 998EF6                A   477        LEA RR8,246(RR14)
0044 D6 0000               A   478        CALL    ___clr_print_fmt
                           A   479    .define "newAddress"
                           A   480    .class 1
                           A   481    .value -12
                           A   482    .type 13
                           A   483    .endef
                           A   484    .define "ch2"
                           A   485    .class 1
                           A   486    .value -13
                           A   487    .type 2
                           A   488    .endef
                           A   489    .define "buffPtr"
                           A   490    .class 1
                           A   491    .value -15
                           A   492    .type 172
                           A   493    .endef
                           A   494    .define "str"
                           A   495    .class 1
                           A   496    .value -25
                           A   497    .dim 10
                           A   498    .type 98
                           A   499    .endef
                           A   500    .define "inputch"
                           A   501    .class 1
                           A   502    .value -26
                           A   503    .type 12
                           A   504    .endef
                           A   505    .define "str"
                           A   506    .class 1
                           A   507    .value -36
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  11


PC     Object              F  Line    Source terminal.src
                           A   508    .dim 10
                           A   509    .type 98
                           A   510    .endef
                           A   511    .define "addrPtr"
                           A   512    .class 1
                           A   513    .value -38
                           A   514    .type 13
                           A   515    .endef
                           A   516    ;   21      UINT8 inputch = getch();
                           A   517    .line 21
0047 D6 0000               A   518        CALL    _getch
004A 89E1E6                A   519        LDX -26(RR14),R1
                           A   520    ;   22      //putch(getch());
                           A   521    ;   23      switch(inputch){
                           A   522    .line 23
004D 881EE6                A   523        LDX R1,-26(RR14)
0050 B0E0                  A   524        CLR R0
0052 2C 00                 A   525        LD  R2,#high(L__8)
0054 3C 00                 A   526        LD  R3,#low(L__8)
0056 D6 0000               A   527        CALL    __b_ucase
0059 C4E0                  A   528        JP  @RR0
                           A   529    ;   24          case '*':
005B                       A   530    _3_L_10:
                           A   531    .line 24
                           A   532    ;   25          {
                           A   533    ;   26              puts("\nUART Terminal\
                           A   534    .line 26
005B 8C 00                 A   535        LD  R8,#high(L__9)
005D 9C 00                 A   536        LD  R9,#low(L__9)
005F D6 0000               A   537        CALL    _f_puts
                           A   538    ;   27              while(1){ // No escape
0062                       A   539    _3_L_15:
                           A   540    .line 27
                           A   541    ;   28                  switch(getch()){
                           A   542    .line 28
0062 D6 0000               A   543        CALL    _getch
0065 2C 00                 A   544        LD  R2,#high(L__10)
0067 3C 3C                 A   545        LD  R3,#low(L__10)
0069 D6 0000               A   546        CALL    __b_ucase
006C C4E0                  A   547        JP  @RR0
                           A   548    ;   29                      case 'R':
006E                       A   549    _3_L_11:
                           A   550    .line 29
                           A   551    ;   30                      {
                           A   552    ;   31                          // Read by
                           A   553    ;   32                          puts("Read
                           A   554    .line 32
006E 8C 00                 A   555        LD  R8,#high(L__11)
0070 9C 2E                 A   556        LD  R9,#low(L__11)
0072 D6 0000               A   557        CALL    _f_puts
                           A   558    ;   33                          // Read by
                           A   559    ;   34                          putch(char
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  12


PC     Object              F  Line    Source terminal.src
                           A   560    .line 34
0075 848002                A   561        LDX R8,_character
0078 D6 0000               A   562        CALL    _putch
                           A   563    ;   35                          puts("\n\n
                           A   564    .line 35
007B 8C 00                 A   565        LD  R8,#high(L__12)
007D 9C 49                 A   566        LD  R9,#low(L__12)
007F D6 0000               A   567        CALL    _f_puts
                           A   568    ;   36                          break;
                           A   569    .line 36
0082 8B DE                 A   570        JR  _3_L_15
                           A   571    ;   37                          
                           A   572    ;   38                      }
                           A   573    ;   39                      case 'W':
0084                       A   574    _3_L_12:
                           A   575    .line 39
                           A   576    ;   40                      {
                           A   577    ;   41                          char str[1
                           A   578    ;   42                          puts("Writ
                           A   579    .line 42
0084 8C 00                 A   580        LD  R8,#high(L__13)
0086 9C 54                 A   581        LD  R9,#low(L__13)
0088 D6 0000               A   582        CALL    _f_puts
                           A   583    ;   43                          // Write a
                           A   584    ;   44                          //characte
                           A   585    ;   45                          // Check f
                           A   586    ;   46                          puts("Flas
                           A   587    .line 46
008B 8C 00                 A   588        LD  R8,#high(L__14)
008D 9C 97                 A   589        LD  R9,#low(L__14)
008F D6 0000               A   590        CALL    _f_puts
                           A   591    ;   47                          sprintf(st
                           A   592    .line 47
0092 1CFF                  A   593        LD  R1,#255
0094 0CE7                  A   594        LD  R0,#231
0096 020F                  A   595        ADD R0,R15
0098 121E                  A   596        ADC R1,R14
009A 89E1FD                A   597        LDX -3(RR14),R1
009D 89E0FE                A   598        LDX -2(RR14),R0
00A0 998EF6                A   599        LEA RR8,246(RR14)
00A3 AC 00                 A   600        LD  R10,#high(L__15)
00A5 BC 00                 A   601        LD  R11,#low(L__15)
00A7 D6 0000               A   602        CALL    ___print_putromstring0
00AA 0C02                  A   603        LD  R0,#2
00AC 89E0FA                A   604        LDX -6(RR14),R0
00AF 0C60                  A   605        LD  R0,#96
00B1 89E0F6                A   606        LDX -10(RR14),R0
00B4 0C78                  A   607        LD  R0,#120
00B6 89E0F9                A   608        LDX -7(RR14),R0
00B9 D6 0027               A   609        CALL    _checkFlash
00BC 998EF6                A   610        LEA RR8,246(RR14)
00BF B0EA                  A   611        CLR R10
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  13


PC     Object              F  Line    Source terminal.src
00C1 E4E0EB                A   612        LD  R11,R0
00C4 D6 0000               A   613        CALL    __u_ustoa
00C7 998EF6                A   614        LEA RR8,246(RR14)
00CA B0EA                  A   615        CLR R10
00CC D6 0000               A   616        CALL    ___print_putch
                           A   617    ;   48                          puts(str);
                           A   618    .line 48
00CF 998EE7                A   619        LEA RR8,231(RR14)
00D2 D6 0000               A   620        CALL    _f_puts
                           A   621    ;   49                          unlockFlas
                           A   622    .line 49
00D5 D6 0000               A   623        CALL    _unlockFlash
                           A   624    ;   50                          sprintf(st
                           A   625    .line 50
00D8 1CFF                  A   626        LD  R1,#255
00DA 0CE7                  A   627        LD  R0,#231
00DC 020F                  A   628        ADD R0,R15
00DE 121E                  A   629        ADC R1,R14
00E0 89E1FD                A   630        LDX -3(RR14),R1
00E3 89E0FE                A   631        LDX -2(RR14),R0
00E6 998EF6                A   632        LEA RR8,246(RR14)
00E9 AC 00                 A   633        LD  R10,#high(L__16)
00EB BC 03                 A   634        LD  R11,#low(L__16)
00ED D6 0000               A   635        CALL    ___print_putromstring0
00F0 0C02                  A   636        LD  R0,#2
00F2 89E0FA                A   637        LDX -6(RR14),R0
00F5 0C60                  A   638        LD  R0,#96
00F7 89E0F6                A   639        LDX -10(RR14),R0
00FA 0C78                  A   640        LD  R0,#120
00FC 89E0F9                A   641        LDX -7(RR14),R0
00FF D6 0027               A   642        CALL    _checkFlash
0102 998EF6                A   643        LEA RR8,246(RR14)
0105 B0EA                  A   644        CLR R10
0107 E4E0EB                A   645        LD  R11,R0
010A D6 0000               A   646        CALL    __u_ustoa
010D 998EF6                A   647        LEA RR8,246(RR14)
0110 B0EA                  A   648        CLR R10
0112 D6 0000               A   649        CALL    ___print_putch
                           A   650    ;   51                          puts("Flas
                           A   651    .line 51
0115 8C 00                 A   652        LD  R8,#high(L__17)
0117 9C A5                 A   653        LD  R9,#low(L__17)
0119 D6 0000               A   654        CALL    _f_puts
                           A   655    ;   52                          puts(str);
                           A   656    .line 52
011C 998EE7                A   657        LEA RR8,231(RR14)
011F D6 0000               A   658        CALL    _f_puts
                           A   659    ;   53                          puts("Succ
                           A   660    .line 53
0122 8C 00                 A   661        LD  R8,#high(L__18)
0124 9C B3                 A   662        LD  R9,#low(L__18)
0126 D6 0000               A   663        CALL    _f_puts
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  14


PC     Object              F  Line    Source terminal.src
                           A   664    ;   54                          break;
                           A   665    .line 54
0129 8D 00 62              A   666        JR  _3_L_15
                           A   667    ;   55                      }
                           A   668    ;   56                      case '?':
012C                       A   669    _3_L_13:
                           A   670    .line 56
                           A   671    ;   57                      {
                           A   672    ;   58                          char str[1
                           A   673    ;   59                          // Check f
                           A   674    ;   60                          puts("Flas
                           A   675    .line 60
012C 8C 00                 A   676        LD  R8,#high(L__19)
012E 9C BD                 A   677        LD  R9,#low(L__19)
0130 D6 0000               A   678        CALL    _f_puts
                           A   679    ;   61                          sprintf(st
                           A   680    .line 61
0133 1CFF                  A   681        LD  R1,#255
0135 0CDC                  A   682        LD  R0,#220
0137 020F                  A   683        ADD R0,R15
0139 121E                  A   684        ADC R1,R14
013B 89E1FD                A   685        LDX -3(RR14),R1
013E 89E0FE                A   686        LDX -2(RR14),R0
0141 998EF6                A   687        LEA RR8,246(RR14)
0144 AC 00                 A   688        LD  R10,#high(L__20)
0146 BC 06                 A   689        LD  R11,#low(L__20)
0148 D6 0000               A   690        CALL    ___print_putromstring0
014B 0C02                  A   691        LD  R0,#2
014D 89E0FA                A   692        LDX -6(RR14),R0
0150 0C60                  A   693        LD  R0,#96
0152 89E0F6                A   694        LDX -10(RR14),R0
0155 0C78                  A   695        LD  R0,#120
0157 89E0F9                A   696        LDX -7(RR14),R0
015A D6 0027               A   697        CALL    _checkFlash
015D 998EF6                A   698        LEA RR8,246(RR14)
0160 B0EA                  A   699        CLR R10
0162 E4E0EB                A   700        LD  R11,R0
0165 D6 0000               A   701        CALL    __u_ustoa
0168 998EF6                A   702        LEA RR8,246(RR14)
016B B0EA                  A   703        CLR R10
016D D6 0000               A   704        CALL    ___print_putch
                           A   705    ;   62                          puts(str);
                           A   706    .line 62
0170 998EDC                A   707        LEA RR8,220(RR14)
0173 D6 0000               A   708        CALL    _f_puts
                           A   709    ;   63                          break;
                           A   710    .line 63
0176 8D 00 62              A   711        JR  _3_L_15
                           A   712    ;   64                      }
                           A   713    ;   65                      default:
0179                       A   714    _3_L_14:
                           A   715    .line 65
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  15


PC     Object              F  Line    Source terminal.src
                           A   716    ;   66                          puts("notF
                           A   717    .line 66
0179 8C 00                 A   718        LD  R8,#high(L__21)
017B 9C CB                 A   719        LD  R9,#low(L__21)
017D D6 0000               A   720        CALL    _f_puts
                           A   721    ;   67                          break;
                           A   722    .line 67
0180 8D 00 62              A   723        JR  _3_L_15
                           A   724    ;   68                  }
                           A   725    ;   69              }
                           A   726    ;   70              break;
                           A   727    ;   71          }   
                           A   728    ;   72          case CMD_STK_GET_SIGN_ON:
0183                       A   729    _3_L_18:
                           A   730    .line 72
                           A   731    ;   73              //trigger_watchdog(); 
                           A   732    ;   74              if (inputch == STK_INS
                           A   733    .line 74
0183 880EE6                A   734        LDX R0,-26(RR14)
0186 A6E014                A   735        CP  R0,#20
0189 ED 03 0A              A   736        JR  NE,_3_L_47
                           A   737    ;   75                  string_response(ST
                           A   738    .line 75
018C 8C 00                 A   739        LD  R8,#high(L__23)
018E 9C 00                 A   740        LD  R9,#low(L__23)
0190 D6 0000               A   741        CALL    _string_response
                           A   742    ;   76                  
                           A   743    ;   77              }
                           A   744    .line 77
                           A   745    ;   78              break;
                           A   746    .line 78
0193 8D 03 0A              A   747        JR  _3_L_47
                           A   748    ;   79          case CMD_STK_GET_SYNC:
0196                       A   749    _3_L_21:
                           A   750    .line 79
                           A   751    ;   80              sync_ok_response();
                           A   752    .line 80
0196 D6 0000               A   753        CALL    _sync_ok_response
                           A   754    ;   81              break;
                           A   755    .line 81
0199 8D 03 0A              A   756        JR  _3_L_47
                           A   757    ;   82          case CMD_STK_GET_PARAMETER
019C                       A   758    _3_L_22:
                           A   759    .line 82
                           A   760    ;   83              {
                           A   761    ;   84                  // trigger_watchdo
                           A   762    ;   85                  char ch2 = getch()
                           A   763    .line 85
019C D6 0000               A   764        CALL    _getch
019F 89E1F3                A   765        LDX -13(RR14),R1
                           A   766    ;   86                  if(ch2 == PARAM_ST
                           A   767    .line 86
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  16


PC     Object              F  Line    Source terminal.src
01A2 881EF3                A   768        LDX R1,-13(RR14)
01A5 E4E1E0                A   769        LD  R0,R1
01A8 90E0                  A   770        RL  R0
01AA 3200                  A   771        SBC R0,R0
01AC A6E180                A   772        CP  R1,#128
01AF 1FA6E000              A   773        CPC R0,#-0
01B3 EB 08                 A   774        JR  NE,_3_L_30
01B5 8C02                  A   775        LD  R8,#2
01B7 D6 0000               A   776        CALL    _byte_response
                           A   777    ;   87                  else if(ch2 == PAR
                           A   778    .line 87
01BA 8D 03 0A              A   779        JR  _3_L_47
01BD                       A   780    _3_L_30:
01BD 881EF3                A   781        LDX R1,-13(RR14)
01C0 E4E1E0                A   782        LD  R0,R1
01C3 90E0                  A   783        RL  R0
01C5 3200                  A   784        SBC R0,R0
01C7 A6E181                A   785        CP  R1,#129
01CA 1FA6E000              A   786        CPC R0,#-0
01CE EB 08                 A   787        JR  NE,_3_L_28
01D0 8C01                  A   788        LD  R8,#1
01D2 D6 0000               A   789        CALL    _byte_response
                           A   790    ;   88                  else if(ch2 == PAR
                           A   791    .line 88
01D5 8D 03 0A              A   792        JR  _3_L_47
01D8                       A   793    _3_L_28:
01D8 881EF3                A   794        LDX R1,-13(RR14)
01DB E4E1E0                A   795        LD  R0,R1
01DE 90E0                  A   796        RL  R0
01E0 3200                  A   797        SBC R0,R0
01E2 A6E182                A   798        CP  R1,#130
01E5 1FA6E000              A   799        CPC R0,#-0
01E9 EB 08                 A   800        JR  NE,_3_L_26
01EB 8C10                  A   801        LD  R8,#16
01ED D6 0000               A   802        CALL    _byte_response
                           A   803    ;   89                  else if(ch2 == PAR
                           A   804    .line 89
01F0 8D 03 0A              A   805        JR  _3_L_47
01F3                       A   806    _3_L_26:
01F3 881EF3                A   807        LDX R1,-13(RR14)
01F6 E4E1E0                A   808        LD  R0,R1
01F9 90E0                  A   809        RL  R0
01FB 3200                  A   810        SBC R0,R0
01FD A6E198                A   811        CP  R1,#152
0200 1FA6E000              A   812        CPC R0,#-0
0204 EB 08                 A   813        JR  NE,_3_L_24
0206 8C03                  A   814        LD  R8,#3
0208 D6 0000               A   815        CALL    _byte_response
                           A   816    ;   90                  else byte_response
                           A   817    .line 90
020B 8D 03 0A              A   818        JR  _3_L_47
020E                       A   819    _3_L_24:
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  17


PC     Object              F  Line    Source terminal.src
020E B0E8                  A   820        CLR R8
0210 D6 0000               A   821        CALL    _byte_response
                           A   822    ;   91              }
                           A   823    .line 91
                           A   824    ;   92              break;
                           A   825    .line 92
0213 8D 03 0A              A   826        JR  _3_L_47
                           A   827    ;   93          case CMD_STK_LOAD_ADDRESS:
0216                       A   828    _3_L_32:
                           A   829    .line 93
                           A   830    ;   94              {
                           A   831    ;   95                 // Load an address 
                           A   832    ;   96                 UINT16 newAddress;
                           A   833    ;   97                 newAddress = getch(
                           A   834    .line 97
0216 D6 0000               A   835        CALL    _getch
0219 89E0F4                A   836        LDX -12(RR14),R0
021C 89E1F5                A   837        LDX -11(RR14),R1
                           A   838    ;   98                 newAddress = (newAd
                           A   839    .line 98
021F 883EF5                A   840        LDX R3,-11(RR14)
0222 B0E2                  A   841        CLR R2
0224 89E2D9                A   842        LDX -39(RR14),R2
0227 89E3D8                A   843        LDX -40(RR14),R3
022A D6 0000               A   844        CALL    _getch
022D 883ED8                A   845        LDX R3,-40(RR14)
0230 882ED9                A   846        LDX R2,-39(RR14)
0233 4221                  A   847        OR  R2,R1
0235 89E2F4                A   848        LDX -12(RR14),R2
0238 89E3F5                A   849        LDX -11(RR14),R3
                           A   850    ;   99                 newAddress += newAd
                           A   851    .line 99
023B 882EF4                A   852        LDX R2,-12(RR14)
023E 883EF5                A   853        LDX R3,-11(RR14)
0241 E4E2E1                A   854        LD  R1,R2
0244 E4E3E0                A   855        LD  R0,R3
0247 0203                  A   856        ADD R0,R3
0249 1212                  A   857        ADC R1,R2
024B 89E1F4                A   858        LDX -12(RR14),R1
024E 89E0F5                A   859        LDX -11(RR14),R0
                           A   860    ;  100                 address = newAddres
                           A   861    .line 100
0251 880EF4                A   862        LDX R0,-12(RR14)
0254 881EF5                A   863        LDX R1,-11(RR14)
0257 940000                A   864        LDX _address,R0
025A 941001                A   865        LDX _address+1,R1
                           A   866    ;  101                 sync_ok_response();
                           A   867    .line 101
025D D6 0000               A   868        CALL    _sync_ok_response
                           A   869    ;  102                 //trigger_watchdog(
                           A   870    ;  103              }
                           A   871    ;  104                 break;
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  18


PC     Object              F  Line    Source terminal.src
                           A   872    .line 104
0260 8D 03 0A              A   873        JR  _3_L_47
                           A   874    ;  105          case CMD_STK_PROG_PAGE:
0263                       A   875    _3_L_33:
                           A   876    .line 105
                           A   877    ;  106          {
                           A   878    ;  107              // Program a page, len
                           A   879    ;  108              // Program the flash m
                           A   880    ;  109              UINT8 *buffPtr;
                           A   881    ;  110              UINT16 addrPtr;
                           A   882    ;  111              getch(); // Skip bytes
                           A   883    .line 111
0263 D6 0000               A   884        CALL    _getch
                           A   885    ;  112              length = getch(); // C
                           A   886    .line 112
0266 D6 0000               A   887        CALL    _getch
0269 940000                A   888        LDX _length,R0
026C 941001                A   889        LDX _length+1,R1
                           A   890    ;  113              getch(); // Skip memty
                           A   891    .line 113
026F D6 0000               A   892        CALL    _getch
                           A   893    ;  114              
                           A   894    ;  115              // If we are in a RWW 
                           A   895    ;  116              //if(address < NRWWSTA
                           A   896    ;  117              
                           A   897    ;  118              // Read in the page co
                           A   898    ;  119              buffPtr = buff;
                           A   899    .line 119
0272 0C01                  A   900        LD  R0,#1
0274 B0E1                  A   901        CLR R1
0276 89E0F1                A   902        LDX -15(RR14),R0
0279 89E1F2                A   903        LDX -14(RR14),R1
                           A   904    ;  120              do *buffPtr++ = getch(
027C                       A   905    _3_L_35:
                           A   906    .line 120
027C 882EF1                A   907        LDX R2,-15(RR14)
027F 883EF2                A   908        LDX R3,-14(RR14)
0282 89E2D9                A   909        LDX -39(RR14),R2
0285 89E3D8                A   910        LDX -40(RR14),R3
0288 D6 0000               A   911        CALL    _getch
028B 883ED8                A   912        LDX R3,-40(RR14)
028E 882ED9                A   913        LDX R2,-39(RR14)
0291 1FE8EE2E E4           A   914        LDWX    RR4,RR2
0296 96E1E4                A   915        LDX @RR4,R1
0299 882EF1                A   916        LDX R2,-15(RR14)
029C 883EF2                A   917        LDX R3,-14(RR14)
029F A0E2                  A   918        INCW    RR2
02A1 89E2F1                A   919        LDX -15(RR14),R2
02A4 89E3F2                A   920        LDX -14(RR14),R3
                           A   921    ;  121              while(--length); // th
                           A   922    .line 121
02A7 29010001              A   923        SUBX    _length+1,#1
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  19


PC     Object              F  Line    Source terminal.src
02AB 39000000              A   924        SBCX    _length,#-0
02AF 840000                A   925        LDX R0,_length
02B2 48 001EE0             A   926        ORX R0,_length+1
02B6 EB C4                 A   927        JR  NE,_3_L_35
                           A   928    ;  122              
                           A   929    ;  123              // Check if we have a 
                           A   930    ;  124              //trigger_watchdog(); 
                           A   931    ;  125              
                           A   932    ;  126              // Check if the erase 
                           A   933    ;  127              // check_if_pageerase_
                           A   934    ;  128              
                           A   935    ;  129              // Copy the buffer int
                           A   936    ;  130              buffPtr = buff;
                           A   937    .line 130
02B8 0C01                  A   938        LD  R0,#1
02BA B0E1                  A   939        CLR R1
02BC 89E0F1                A   940        LDX -15(RR14),R0
02BF 89E1F2                A   941        LDX -14(RR14),R1
                           A   942    ;  131              addrPtr = (UINT16)(voi
                           A   943    .line 131
02C2 840000                A   944        LDX R0,_address
02C5 841001                A   945        LDX R1,_address+1
02C8 89E0DA                A   946        LDX -38(RR14),R0
02CB 89E1DB                A   947        LDX -37(RR14),R1
                           A   948    ;  132              inputch = 1024 / 2;  /
                           A   949    .line 132
02CE B0E0                  A   950        CLR R0
02D0 89E0E6                A   951        LDX -26(RR14),R0
                           A   952    ;  133              //do {
                           A   953    ;  134                  // TODO: Write int
                           A   954    ;  135              //} while(--inputch);
                           A   955    ;  136              
                           A   956    ;  137              // check_if_flashwrite
                           A   957    ;  138              
                           A   958    ;  139              sync_ok_response();
                           A   959    .line 139
02D3 D6 0000               A   960        CALL    _sync_ok_response
                           A   961    ;  140          }
                           A   962    ;  141              break; 
                           A   963    .line 141
02D6 8B 32                 A   964        JR  _3_L_47
                           A   965    ;  142          case CMD_STK_READ_PAGE:
02D8                       A   966    _3_L_38:
                           A   967    .line 142
                           A   968    ;  143          {
                           A   969    ;  144              // Read the requested 
                           A   970    ;  145              getch(); // Skip bytes
                           A   971    .line 145
02D8 D6 0000               A   972        CALL    _getch
                           A   973    ;  146              length = getch(); // B
                           A   974    .line 146
02DB D6 0000               A   975        CALL    _getch
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  20


PC     Object              F  Line    Source terminal.src
02DE 940000                A   976        LDX _length,R0
02E1 941001                A   977        LDX _length+1,R1
                           A   978    ;  147              getch(); // Skip mem-t
                           A   979    .line 147
02E4 D6 0000               A   980        CALL    _getch
                           A   981    ;  148              
                           A   982    ;  149              sync_ok_response();
                           A   983    .line 149
02E7 D6 0000               A   984        CALL    _sync_ok_response
                           A   985    ;  150              
                           A   986    ;  151              // trigger_watchdog();
                           A   987    ;  152              // do putch(read_addre
                           A   988    ;  153              // while(--length);
                           A   989    ;  154          }
                           A   990    ;  155              break;
                           A   991    .line 155
02EA 8B 1E                 A   992        JR  _3_L_47
                           A   993    ;  156          /*case CMD_STK_PROG_FLASH:
                           A   994    ;  157              // TODO: Program the d
                           A   995    ;  158              sync_ok_response();
                           A   996    ;  159              break;*/
                           A   997    ;  160          case CMD_STK_READ_SIGN:
02EC                       A   998    _3_L_39:
                           A   999    .line 160
                           A  1000    ;  161          {
                           A  1001    ;  162              putch(STK_INSYNC);
                           A  1002    .line 162
02EC 8C14                  A  1003        LD  R8,#20
02EE D6 0000               A  1004        CALL    _putch
                           A  1005    ;  163              // READ SIGN - return 
                           A  1006    ;  164              putch(PROPS_SIGNATURE_
                           A  1007    .line 164
02F1 8C1E                  A  1008        LD  R8,#30
02F3 D6 0000               A  1009        CALL    _putch
                           A  1010    ;  165              putch(PROPS_SIGNATURE_
                           A  1011    .line 165
02F6 8C95                  A  1012        LD  R8,#-107
02F8 D6 0000               A  1013        CALL    _putch
                           A  1014    ;  166              putch(PROPS_SIGNATURE_
                           A  1015    .line 166
02FB 8C0F                  A  1016        LD  R8,#15
02FD D6 0000               A  1017        CALL    _putch
                           A  1018    ;  167              putch(STK_OK);
                           A  1019    .line 167
0300 8C10                  A  1020        LD  R8,#16
0302 D6 0000               A  1021        CALL    _putch
                           A  1022    ;  168          }
                           A  1023    ;  169              break;      
                           A  1024    .line 169
0305 8B 03                 A  1025        JR  _3_L_47
                           A  1026    ;  170          case CMD_STK_SET_DEVICE:
0307                       A  1027    _3_L_40:
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  21


PC     Object              F  Line    Source terminal.src
                           A  1028    .line 170
                           A  1029    ;  171          case CMD_STK_SET_DEVICE_EX
0307                       A  1030    _3_L_41:
                           A  1031    .line 171
                           A  1032    ;  172          case CMD_STK_UNIVERSAL:
0307                       A  1033    _3_L_42:
                           A  1034    .line 172
                           A  1035    ;  173          case CMD_STK_CHIP_ERASE:
0307                       A  1036    _3_L_43:
                           A  1037    .line 173
                           A  1038    ;  174          case CMD_STK_SET_PARAMETER
0307                       A  1039    _3_L_44:
                           A  1040    .line 174
                           A  1041    ;  175          case CMD_STK_UNIVERSAL_MUL
0307                       A  1042    _3_L_45:
                           A  1043    .line 175
                           A  1044    ;  176          default:
0307                       A  1045    _3_L_46:
                           A  1046    .line 176
                           A  1047    ;  177              sync_ok_response();
                           A  1048    .line 177
0307 D6 0000               A  1049        CALL    _sync_ok_response
                           A  1050    ;  178      }
030A                       A  1051    _3_L_47:
                           A  1052    .line 179
030A D6 0000               A  1053        CALL    __b_iframereset
030D BF                    A  1054        IRET    
                           A  1055    .endfunc "isr_uart0_rx",179,"_isr_uart0_rx
                           A  1056        XREF _string_response:ROM
                           A  1057        XREF _byte_response:ROM
                           A  1058        XREF _sync_ok_response:ROM
                           A  1059        XREF _getch:ROM
                           A  1060        XREF _f_puts:ROM
                           A  1061        XREF _putch:ROM
                           A  1062        XREF ___clr_print_fmt:ROM
                           A  1063        XREF __u_ustoa:ROM
                           A  1064        XREF ___print_putromstring0:ROM
                           A  1065        XREF ___print_putch:ROM
                           A  1066        XREF __b_ucase:ROM
                           A  1067        XREF __b_framereset:ROM
                           A  1068        XREF __b_iframereset:ROM
                           A  1069        XREF __b_frameset0:ROM
                           A  1070        XREF __b_frameset00:ROM
                           A  1071        XREF __intrp:EDATA
                           A  1072        XDEF _isr_uart0_rx
                           A  1073        XDEF _character
                           A  1074        XDEF _length
                           A  1075        XDEF _address
                           A  1076        XDEF _checkFlash
                           A  1077        XDEF _unlockFlash
                           A  1078        END
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     00:26:58     page:  22


PC     Object              F  Line    Source 


Errors: 0
Warnings: 0
Lines Assembled: 1079
