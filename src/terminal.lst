Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   1


PC     Object              F  Line    Source terminal.src
                           A     1    ; Z8 Encore! ANSI C Compiler Release 3.80
                           A     2    ; -nolocalcse -optsize -fastcall -const=RA
                           A     3    ; -nooptlink -noregvar -reduceopt -debug -
                           A     4    ; -alias 
                           A     5        DEFINE terminal_TEXT,SPACE=ROM
                           A     6        FILE    ".\terminal.c"
                           A     7    .debug "C"
                           A     8        SEGMENT FAR_DATA
0000                       A     9    _address:
0000 0400                  A    10        DW  1024
                           A    11    .define "address"
                           A    12    .alias "_address"
                           A    13    .class 69
                           A    14    .value _address
                           A    15    .type 13
                           A    16    .endef
                           A    17        SEGMENT terminal_TEXT
                           A    18    .begrec "fmt_type",10
                           A    19    .define "flags"
                           A    20    .value 0
                           A    21    .class 8
                           A    22    .type 2
                           A    23    .endef
                           A    24    .define "size"
                           A    25    .value 1
                           A    26    .class 8
                           A    27    .type 2
                           A    28    .endef
                           A    29    .define "space"
                           A    30    .value 2
                           A    31    .class 8
                           A    32    .type 2
                           A    33    .endef
                           A    34    .define "type"
                           A    35    .value 3
                           A    36    .class 8
                           A    37    .type 2
                           A    38    .endef
                           A    39    .define "field_width"
                           A    40    .value 4
                           A    41    .class 8
                           A    42    .type 2
                           A    43    .endef
                           A    44    .define "precision"
                           A    45    .value 5
                           A    46    .class 8
                           A    47    .type 2
                           A    48    .endef
                           A    49    .define "print_leading_char"
                           A    50    .value 6
                           A    51    .class 8
                           A    52    .type 2
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   2


PC     Object              F  Line    Source terminal.src
                           A    53    .endef
                           A    54    .define "dest"
                           A    55    .value 7
                           A    56    .class 8
                           A    57    .type 162
                           A    58    .endef
                           A    59    .define "print_len"
                           A    60    .value 9
                           A    61    .class 8
                           A    62    .type 12
                           A    63    .endef
                           A    64    .endrec "fmt_type"
                           A    65    .begrec "flt_fmt_data",5
                           A    66    .define "pad_whole"
                           A    67    .value 0
                           A    68    .class 8
                           A    69    .type 12
                           A    70    .endef
                           A    71    .define "pad_pre_fract"
                           A    72    .value 1
                           A    73    .class 8
                           A    74    .type 12
                           A    75    .endef
                           A    76    .define "pad_post_fract"
                           A    77    .value 2
                           A    78    .class 8
                           A    79    .type 12
                           A    80    .endef
                           A    81    .define "pad_at"
                           A    82    .value 3
                           A    83    .class 8
                           A    84    .type 162
                           A    85    .endef
                           A    86    .endrec "flt_fmt_data"
                           A    87    .begrec "fmt_control_data",2
                           A    88    .define "status"
                           A    89    .value 0
                           A    90    .class 8
                           A    91    .type 2
                           A    92    .endef
                           A    93    .define "chr"
                           A    94    .value 1
                           A    95    .class 8
                           A    96    .type 2
                           A    97    .endef
                           A    98    .endrec "fmt_control_data"
                           A    99    .begrec "_set_type",4
                           A   100    .define "begin"
                           A   101    .value 0
                           A   102    .class 8
                           A   103    .type 162
                           A   104    .endef
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   3


PC     Object              F  Line    Source terminal.src
                           A   105    .define "end"
                           A   106    .value 2
                           A   107    .class 8
                           A   108    .type 162
                           A   109    .endef
                           A   110    .endrec "_set_type"
                           A   111    .begrec "near_set_type",2
                           A   112    .define "begin"
                           A   113    .value 0
                           A   114    .class 8
                           A   115    .type 130
                           A   116    .endef
                           A   117    .define "end"
                           A   118    .value 1
                           A   119    .class 8
                           A   120    .type 130
                           A   121    .endef
                           A   122    .endrec "near_set_type"
                           A   123    .begrec "far_set_type",4
                           A   124    .define "begin"
                           A   125    .value 0
                           A   126    .class 8
                           A   127    .type 162
                           A   128    .endef
                           A   129    .define "end"
                           A   130    .value 2
                           A   131    .class 8
                           A   132    .type 162
                           A   133    .endef
                           A   134    .endrec "far_set_type"
                           A   135    .begrec "rom_set_type",4
                           A   136    .define "begin"
                           A   137    .value 0
                           A   138    .class 8
                           A   139    .type 194
                           A   140    .endef
                           A   141    .define "end"
                           A   142    .value 2
                           A   143    .class 8
                           A   144    .type 194
                           A   145    .endef
                           A   146    .endrec "rom_set_type"
                           A   147    .begrec "flt_info",12
                           A   148    .define "flags"
                           A   149    .value 0
                           A   150    .class 8
                           A   151    .type 12
                           A   152    .endef
                           A   153    .define "exp"
                           A   154    .value 1
                           A   155    .class 8
                           A   156    .type 2
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   4


PC     Object              F  Line    Source terminal.src
                           A   157    .endef
                           A   158    .define "digits"
                           A   159    .value 2
                           A   160    .class 8
                           A   161    .dim 10
                           A   162    .type 108
                           A   163    .endef
                           A   164    .endrec "flt_info"
                           A   165    .begrec "NONAME0",6
                           A   166    .define "baudRate"
                           A   167    .value 0
                           A   168    .class 8
                           A   169    .type 5
                           A   170    .endef
                           A   171    .define "stopBits"
                           A   172    .value 4
                           A   173    .class 8
                           A   174    .type 12
                           A   175    .endef
                           A   176    .define "parity"
                           A   177    .value 5
                           A   178    .class 8
                           A   179    .type 12
                           A   180    .endef
                           A   181    .endrec "NONAME0"
                           A   182    .begrec "NONAME1",5
                           A   183    .define "pBuffer"
                           A   184    .value 0
                           A   185    .class 8
                           A   186    .type 172
                           A   187    .endef
                           A   188    .define "next_in"
                           A   189    .value 2
                           A   190    .class 8
                           A   191    .type 12
                           A   192    .endef
                           A   193    .define "next_out"
                           A   194    .value 3
                           A   195    .class 8
                           A   196    .type 12
                           A   197    .endef
                           A   198    .define "size"
                           A   199    .value 4
                           A   200    .class 8
                           A   201    .type 12
                           A   202    .endef
                           A   203    .endrec "NONAME1"
                           A   204        SEGMENT FAR_BSS
0000                       A   205    _length:
0000                       A   206        DS  2*1
                           A   207    .define "length"
                           A   208    .alias "_length"
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   5


PC     Object              F  Line    Source terminal.src
                           A   209    .class 83
                           A   210    .value _length
                           A   211    .type 13
                           A   212    .endef
                           A   213        SEGMENT FAR_DATA
0002                       A   214    _character:
0002 00                    A   215        DB  0
                           A   216    .define "character"
                           A   217    .alias "_character"
                           A   218    .class 69
                           A   219    .value _character
                           A   220    .type 12
                           A   221    .endef
                           A   222        SEGMENT ROM_DATA
                           A   223    ;   Jump Table for Switch Statement at lin
0000                       A   224    L__0:
0000 000E                  A   225        DW  14
0002 002A                  A   226        DW  42
0004 002A                  A   227        DW  _1_L_0
0006 0030                  A   228        DW  48
0008 01C9                  A   229        DW  _1_L_13
000A 0031                  A   230        DW  49
000C 01B6                  A   231        DW  _1_L_10
000E 0040                  A   232        DW  64
0010 033A                  A   233        DW  _1_L_36
0012 0041                  A   234        DW  65
0014 01CF                  A   235        DW  _1_L_14
0016 0042                  A   236        DW  66
0018 033A                  A   237        DW  _1_L_32
001A 0045                  A   238        DW  69
001C 033A                  A   239        DW  _1_L_33
001E 0052                  A   240        DW  82
0020 033A                  A   241        DW  _1_L_35
0022 0055                  A   242        DW  85
0024 0249                  A   243        DW  _1_L_24
0026 0056                  A   244        DW  86
0028 033A                  A   245        DW  _1_L_34
002A 0057                  A   246        DW  87
002C 033A                  A   247        DW  _1_L_37
002E 0064                  A   248        DW  100
0030 0296                  A   249        DW  _1_L_25
0032 0074                  A   250        DW  116
0034 030B                  A   251        DW  _1_L_30
0036 0075                  A   252        DW  117
0038 031F                  A   253        DW  _1_L_31
003A 033A                  A   254        DW  _1_L_38
                           A   255    ;   Jump Table for Switch Statement at lin
003C                       A   256    L__2:
003C 0003                  A   257        DW  3
003E 003F                  A   258        DW  63
0040 015F                  A   259        DW  _1_L_5
0042 0052                  A   260        DW  82
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   6


PC     Object              F  Line    Source terminal.src
0044 003D                  A   261        DW  _1_L_1
0046 0057                  A   262        DW  87
0048 0053                  A   263        DW  _1_L_2
004A 01AC                  A   264        DW  _1_L_6
                           A   265    
                           A   266    
                           A   267    ;**************************** _isr_uart0_r
                           A   268    ;Name                         Addr/Registe
                           A   269    ;_length                             STATI
                           A   270    ;_address                            STATI
                           A   271    ;_byte_response                      IMPOR
                           A   272    ;_sync_ok_response                   IMPOR
                           A   273    ;_string_response                    IMPOR
                           A   274    ;_pageEraseFlash                     IMPOR
                           A   275    ;___print_putch                      IMPOR
                           A   276    ;_checkFlash                         IMPOR
                           A   277    ;__u_ustoa                           IMPOR
                           A   278    ;___print_putromstring0              IMPOR
                           A   279    ;_character                          STATI
                           A   280    ;_putch                              IMPOR
                           A   281    ;_f_puts                             IMPOR
                           A   282    ;_getch                              IMPOR
                           A   283    ;addrPtr                            RR14-4
                           A   284    ;pageEraseRes                       RR14-3
                           A   285    ;str                                RR14-3
                           A   286    ;inputch                            RR14-2
                           A   287    ;buffPtr                            RR14-2
                           A   288    ;ch2                                RR14-2
                           A   289    ;str                                RR14-2
                           A   290    ;newAddress                         RR14-1
                           A   291    ;___clr_print_fmt                    IMPOR
                           A   292    
                           A   293    
                           A   294    ; Aggregate Stack Size: -42 (words)
                           A   295    
                           A   296    
                           A   297        SEGMENT FAR_TXT
0000                       A   298    L__1:
0000 0A                    A   299        DB  10
0001 55415254 20546572     A   300        DB  "UART Terminal"
0009 6D696E61 6C 
000E 0A                    A   301        DB  10
000F 3D3D3D                A   302        DB  "==="
0012 0A0A                  A   303        DB  10,10
0014 54797065 20612063     A   304        DB  "Type a command to begin."
001C 6F6D6D61 6E642074 
0024 6F206265 67696E2E 
002C 0A00                  A   305        DB  10,0
002E                       A   306    L__3:
002E 52656164 696E6720     A   307        DB  "Reading byte from memory."
0036 62797465 2066726F 
003E 6D206D65 6D6F7279 2E 
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   7


PC     Object              F  Line    Source terminal.src
0047 0A00                  A   308        DB  10,0
0049                       A   309    L__4:
0049 0A0A                  A   310        DB  10,10
004B 53756363 6573732E     A   311        DB  "Success."
0053 00                    A   312        DB  0
0054                       A   313    L__5:
0054 57726974 696E6720     A   314        DB  "Writing byte to memory. Reboot to
005C 62797465 20746F20 
0064 6D656D6F 72792E20 
006C 5265626F 6F742074 
0074 6F206368 65636B20 
007C 746F2073 65652069 
0084 66206974 20686173 
008C 20777269 7474656E 2E 
0095 0A00                  A   315        DB  10,0
0097                       A   316    L__6:
0097 466C6173 68207374 6174   A   317        DB  "Flash stat"
00A1 0A                    A   318        DB  10
00A2 3D3D                  A   319        DB  "=="
00A4 00                    A   320        DB  0
00A5                       A   321    L__9:
00A5 4572723A 20706167     A   322        DB  "Err: pageErase"
00AD 65457261 7365 
00B3 00                    A   323        DB  0
00B4                       A   324    L__11:
00B4 466C6173 68207374 6174   A   325        DB  "Flash stat"
00BE 0A                    A   326        DB  10
00BF 3D3D                  A   327        DB  "=="
00C1 00                    A   328        DB  0
00C2                       A   329    L__13:
00C2 53756363 6573732E     A   330        DB  "Success."
00CA 0A00                  A   331        DB  10,0
00CC                       A   332    L__14:
00CC 466C6173 68207374 6174   A   333        DB  "Flash stat"
00D6 0A                    A   334        DB  10
00D7 3D3D                  A   335        DB  "=="
00D9 00                    A   336        DB  0
00DA                       A   337    L__16:
00DA 6E6F7446 6F756E64     A   338        DB  "notFound"
00E2 00                    A   339        DB  0
                           A   340        .FRAME _i_isr_uart0_rx,?_i_isr_uart0_r
                           A   341        .FCALL _n___clr_print_fmt
                           A   342        .FCALL _n_getch
                           A   343        .FCALL _n_f_puts
                           A   344        .FCALL _n_putch
                           A   345        .FCALL _n___print_putromstring0
                           A   346        .FCALL _n__u_ustoa
                           A   347        .FCALL _n_checkFlash
                           A   348        .FCALL _n___print_putch
                           A   349        .FCALL _n_pageEraseFlash
                           A   350        .FCALL _n_string_response
                           A   351        .FCALL _n_sync_ok_response
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   8


PC     Object              F  Line    Source terminal.src
                           A   352        .FCALL _n_byte_response
                           A   353        .FRAME _if_isr_uart0_rx,?_if_isr_uart0
                           A   354        .FCALL _f___clr_print_fmt
                           A   355        .FCALL _f_getch
                           A   356        .FCALL _f_f_puts
                           A   357        .FCALL _f_putch
                           A   358        .FCALL _f___print_putromstring0
                           A   359        .FCALL _f__u_ustoa
                           A   360        .FCALL _f_checkFlash
                           A   361        .FCALL _f___print_putch
                           A   362        .FCALL _f_pageEraseFlash
                           A   363        .FCALL _f_string_response
                           A   364        .FCALL _f_sync_ok_response
                           A   365        .FCALL _f_byte_response
                           A   366        SEGMENT TEXT
0000                       A   367    L__18:
0000 5A382045 6E636F72     A   368        DB  "Z8 Encore! STK"
0008 65212053 544B 
000E 00                    A   369        DB  0
                           A   370        SEGMENT ROM_TEXT
0000                       A   371    L__7:
0000 3078                  A   372        DB  "0x"
0002 00                    A   373        DB  0
0003                       A   374    L__10:
0003 3078                  A   375        DB  "0x"
0005 00                    A   376        DB  0
0006                       A   377    L__12:
0006 3078                  A   378        DB  "0x"
0008 00                    A   379        DB  0
0009                       A   380    L__15:
0009 3078                  A   381        DB  "0x"
000B 00                    A   382        DB  0
                           A   383    ;    1  #include "terminal.h"
                           A   384    ;    2  #include "stk500.h"
                           A   385    ;    3  #include "util.h"
                           A   386    ;    4  #include "boot_tools.h"
                           A   387    ;    5  #include "flash_tools.h"
                           A   388    ;    6  
                           A   389    ;    7  register UINT16 address = 0x400; /
                           A   390    ;    8  register UINT16 length;
                           A   391    ;    9  
                           A   392    ;   10  #define RAMSTART  (0x100)
                           A   393    ;   11  #define NRWWSTART (0x1800)
                           A   394    ;   12  #define buff      ((UINT8*)(RAMSTA
                           A   395    ;   13  UINT8 character = ((UINT8)((void*)
                           A   396        SEGMENT terminal_TEXT
                           A   397    ;   14  
                           A   398    ;   15  //////////////////////////////////
                           A   399    ;   16  //Interrupt routine
                           A   400    ;   17  
                           A   401    ;   18  #pragma interrupt
                           A   402    ;   19  void isr_uart0_rx(void) 
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:   9


PC     Object              F  Line    Source terminal.src
                           A   403    ;   20  {
0000                       A   404    _isr_uart0_rx:
                           A   405    .define "_isr_uart0_rx"
                           A   406    .value _isr_uart0_rx
                           A   407    .class 2
                           A   408    .type 65
                           A   409    .endef
                           A   410    .begfunc "isr_uart0_rx",20,"_isr_uart0_rx"
0000 C8FFD0                A   411        PUSHX   4093
0003 E8 000FFD             A   412        LDX 4093,__intrp
0007 09100000              A   413        ADDX    __intrp,#16
000B 5C2A                  A   414        LD  R5,#42
000D D6 0000               A   415        CALL    __b_frameset0
                           A   416    .line 20
0010 998EF6                A   417        LEA RR8,246(RR14)
0013 D6 0000               A   418        CALL    ___clr_print_fmt
                           A   419    .define "newAddress"
                           A   420    .class 1
                           A   421    .value -12
                           A   422    .type 13
                           A   423    .endef
                           A   424    .define "str"
                           A   425    .class 1
                           A   426    .value -22
                           A   427    .dim 10
                           A   428    .type 98
                           A   429    .endef
                           A   430    .define "ch2"
                           A   431    .class 1
                           A   432    .value -23
                           A   433    .type 2
                           A   434    .endef
                           A   435    .define "buffPtr"
                           A   436    .class 1
                           A   437    .value -25
                           A   438    .type 172
                           A   439    .endef
                           A   440    .define "inputch"
                           A   441    .class 1
                           A   442    .value -26
                           A   443    .type 12
                           A   444    .endef
                           A   445    .define "str"
                           A   446    .class 1
                           A   447    .value -36
                           A   448    .dim 10
                           A   449    .type 98
                           A   450    .endef
                           A   451    .define "pageEraseRes"
                           A   452    .class 1
                           A   453    .value -38
                           A   454    .type 3
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  10


PC     Object              F  Line    Source terminal.src
                           A   455    .endef
                           A   456    .define "addrPtr"
                           A   457    .class 1
                           A   458    .value -40
                           A   459    .type 13
                           A   460    .endef
                           A   461    ;   21      UINT8 inputch = getch();
                           A   462    .line 21
0016 D6 0000               A   463        CALL    _getch
0019 89E1E6                A   464        LDX -26(RR14),R1
                           A   465    ;   22      //putch(getch());
                           A   466    ;   23      switch(inputch){
                           A   467    .line 23
001C 881EE6                A   468        LDX R1,-26(RR14)
001F B0E0                  A   469        CLR R0
0021 2C 00                 A   470        LD  R2,#high(L__0)
0023 3C 00                 A   471        LD  R3,#low(L__0)
0025 D6 0000               A   472        CALL    __b_ucase
0028 C4E0                  A   473        JP  @RR0
                           A   474    ;   24          case '*':
002A                       A   475    _1_L_0:
                           A   476    .line 24
                           A   477    ;   25          {
                           A   478    ;   26              puts("\nUART Terminal\
                           A   479    .line 26
002A 8C 00                 A   480        LD  R8,#high(L__1)
002C 9C 00                 A   481        LD  R9,#low(L__1)
002E D6 0000               A   482        CALL    _f_puts
                           A   483    ;   27              while(1){ // No escape
0031                       A   484    _1_L_7:
                           A   485    .line 27
                           A   486    ;   28                  switch(getch()){
                           A   487    .line 28
0031 D6 0000               A   488        CALL    _getch
0034 2C 00                 A   489        LD  R2,#high(L__2)
0036 3C 3C                 A   490        LD  R3,#low(L__2)
0038 D6 0000               A   491        CALL    __b_ucase
003B C4E0                  A   492        JP  @RR0
                           A   493    ;   29                      case 'R':
003D                       A   494    _1_L_1:
                           A   495    .line 29
                           A   496    ;   30                      {
                           A   497    ;   31                          // Read by
                           A   498    ;   32                          puts("Read
                           A   499    .line 32
003D 8C 00                 A   500        LD  R8,#high(L__3)
003F 9C 2E                 A   501        LD  R9,#low(L__3)
0041 D6 0000               A   502        CALL    _f_puts
                           A   503    ;   33                          // Read by
                           A   504    ;   34                          putch(char
                           A   505    .line 34
0044 848002                A   506        LDX R8,_character
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  11


PC     Object              F  Line    Source terminal.src
0047 D6 0000               A   507        CALL    _putch
                           A   508    ;   35                          puts("\n\n
                           A   509    .line 35
004A 8C 00                 A   510        LD  R8,#high(L__4)
004C 9C 49                 A   511        LD  R9,#low(L__4)
004E D6 0000               A   512        CALL    _f_puts
                           A   513    ;   36                          break;
                           A   514    .line 36
0051 8B DE                 A   515        JR  _1_L_7
                           A   516    ;   37                          
                           A   517    ;   38                      }
                           A   518    ;   39                      case 'W':
0053                       A   519    _1_L_2:
                           A   520    .line 39
                           A   521    ;   40                      {
                           A   522    ;   41                          char str[1
                           A   523    ;   42                          int pageEr
                           A   524    ;   43                          puts("Writ
                           A   525    .line 43
0053 8C 00                 A   526        LD  R8,#high(L__5)
0055 9C 54                 A   527        LD  R9,#low(L__5)
0057 D6 0000               A   528        CALL    _f_puts
                           A   529    ;   44                          // Write a
                           A   530    ;   45                          //characte
                           A   531    ;   46                          // Check f
                           A   532    ;   47                          puts("Flas
                           A   533    .line 47
005A 8C 00                 A   534        LD  R8,#high(L__6)
005C 9C 97                 A   535        LD  R9,#low(L__6)
005E D6 0000               A   536        CALL    _f_puts
                           A   537    ;   48                          sprintf(st
                           A   538    .line 48
0061 1CFF                  A   539        LD  R1,#255
0063 0CEA                  A   540        LD  R0,#234
0065 020F                  A   541        ADD R0,R15
0067 121E                  A   542        ADC R1,R14
0069 89E1FD                A   543        LDX -3(RR14),R1
006C 89E0FE                A   544        LDX -2(RR14),R0
006F 998EF6                A   545        LEA RR8,246(RR14)
0072 AC 00                 A   546        LD  R10,#high(L__7)
0074 BC 00                 A   547        LD  R11,#low(L__7)
0076 D6 0000               A   548        CALL    ___print_putromstring0
0079 0C02                  A   549        LD  R0,#2
007B 89E0FA                A   550        LDX -6(RR14),R0
007E 0C60                  A   551        LD  R0,#96
0080 89E0F6                A   552        LDX -10(RR14),R0
0083 0C78                  A   553        LD  R0,#120
0085 89E0F9                A   554        LDX -7(RR14),R0
0088 D6 0000               A   555        CALL    _checkFlash
008B 998EF6                A   556        LEA RR8,246(RR14)
008E B0EA                  A   557        CLR R10
0090 E4E0EB                A   558        LD  R11,R0
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  12


PC     Object              F  Line    Source terminal.src
0093 D6 0000               A   559        CALL    __u_ustoa
0096 998EF6                A   560        LEA RR8,246(RR14)
0099 B0EA                  A   561        CLR R10
009B D6 0000               A   562        CALL    ___print_putch
                           A   563    ;   49                          puts(str);
                           A   564    .line 49
009E 998EEA                A   565        LEA RR8,234(RR14)
00A1 D6 0000               A   566        CALL    _f_puts
                           A   567    ;   50                          // unlockF
                           A   568    ;   51                          pageEraseR
                           A   569    .line 51
00A4 B0E8                  A   570        CLR R8
00A6 B0E9                  A   571        CLR R9
00A8 AC14                  A   572        LD  R10,#20
00AA B0EB                  A   573        CLR R11
00AC D6 0000               A   574        CALL    _pageEraseFlash
00AF 89E0DA                A   575        LDX -38(RR14),R0
00B2 89E1DB                A   576        LDX -37(RR14),R1
                           A   577    ;   52                          if (pageEr
                           A   578    .line 52
00B5 880EDA                A   579        LDX R0,-38(RR14)
00B8 881EDB                A   580        LDX R1,-37(RR14)
00BB A6E1FF                A   581        CP  R1,#255
00BE 1FA6E0FF              A   582        CPC R0,#255
00C2 EB 07                 A   583        JR  NE,_1_L_4
00C4 8C 00                 A   584        LD  R8,#high(L__9)
00C6 9C A5                 A   585        LD  R9,#low(L__9)
00C8 D6 0000               A   586        CALL    _f_puts
00CB                       A   587    _1_L_4:
                           A   588    ;   53                          sprintf(st
                           A   589    .line 53
00CB 1CFF                  A   590        LD  R1,#255
00CD 0CEA                  A   591        LD  R0,#234
00CF 020F                  A   592        ADD R0,R15
00D1 121E                  A   593        ADC R1,R14
00D3 89E1FD                A   594        LDX -3(RR14),R1
00D6 89E0FE                A   595        LDX -2(RR14),R0
00D9 998EF6                A   596        LEA RR8,246(RR14)
00DC AC 00                 A   597        LD  R10,#high(L__10)
00DE BC 03                 A   598        LD  R11,#low(L__10)
00E0 D6 0000               A   599        CALL    ___print_putromstring0
00E3 0C02                  A   600        LD  R0,#2
00E5 89E0FA                A   601        LDX -6(RR14),R0
00E8 0C60                  A   602        LD  R0,#96
00EA 89E0F6                A   603        LDX -10(RR14),R0
00ED 0C78                  A   604        LD  R0,#120
00EF 89E0F9                A   605        LDX -7(RR14),R0
00F2 D6 0000               A   606        CALL    _checkFlash
00F5 998EF6                A   607        LEA RR8,246(RR14)
00F8 B0EA                  A   608        CLR R10
00FA E4E0EB                A   609        LD  R11,R0
00FD D6 0000               A   610        CALL    __u_ustoa
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  13


PC     Object              F  Line    Source terminal.src
0100 998EF6                A   611        LEA RR8,246(RR14)
0103 B0EA                  A   612        CLR R10
0105 D6 0000               A   613        CALL    ___print_putch
                           A   614    ;   54                          puts("Flas
                           A   615    .line 54
0108 8C 00                 A   616        LD  R8,#high(L__11)
010A 9C B4                 A   617        LD  R9,#low(L__11)
010C D6 0000               A   618        CALL    _f_puts
                           A   619    ;   55                          puts(str);
                           A   620    .line 55
010F 998EEA                A   621        LEA RR8,234(RR14)
0112 D6 0000               A   622        CALL    _f_puts
                           A   623    ;   56                          sprintf(st
                           A   624    .line 56
0115 1CFF                  A   625        LD  R1,#255
0117 0CEA                  A   626        LD  R0,#234
0119 020F                  A   627        ADD R0,R15
011B 121E                  A   628        ADC R1,R14
011D 89E1FD                A   629        LDX -3(RR14),R1
0120 89E0FE                A   630        LDX -2(RR14),R0
0123 998EF6                A   631        LEA RR8,246(RR14)
0126 AC 00                 A   632        LD  R10,#high(L__12)
0128 BC 06                 A   633        LD  R11,#low(L__12)
012A D6 0000               A   634        CALL    ___print_putromstring0
012D 0C02                  A   635        LD  R0,#2
012F 89E0FA                A   636        LDX -6(RR14),R0
0132 0C60                  A   637        LD  R0,#96
0134 89E0F6                A   638        LDX -10(RR14),R0
0137 0C78                  A   639        LD  R0,#120
0139 89E0F9                A   640        LDX -7(RR14),R0
013C 84B002                A   641        LDX R11,_character
013F 998EF6                A   642        LEA RR8,246(RR14)
0142 B0EA                  A   643        CLR R10
0144 D6 0000               A   644        CALL    __u_ustoa
0147 998EF6                A   645        LEA RR8,246(RR14)
014A B0EA                  A   646        CLR R10
014C D6 0000               A   647        CALL    ___print_putch
                           A   648    ;   57                          puts(str);
                           A   649    .line 57
014F 998EEA                A   650        LEA RR8,234(RR14)
0152 D6 0000               A   651        CALL    _f_puts
                           A   652    ;   58                          puts("Succ
                           A   653    .line 58
0155 8C 00                 A   654        LD  R8,#high(L__13)
0157 9C C2                 A   655        LD  R9,#low(L__13)
0159 D6 0000               A   656        CALL    _f_puts
                           A   657    ;   59                          break;
                           A   658    .line 59
015C 8D 00 31              A   659        JR  _1_L_7
                           A   660    ;   60                      }
                           A   661    ;   61                      case '?':
015F                       A   662    _1_L_5:
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  14


PC     Object              F  Line    Source terminal.src
                           A   663    .line 61
                           A   664    ;   62                      {
                           A   665    ;   63                          char str[1
                           A   666    ;   64                          // Check f
                           A   667    ;   65                          puts("Flas
                           A   668    .line 65
015F 8C 00                 A   669        LD  R8,#high(L__14)
0161 9C CC                 A   670        LD  R9,#low(L__14)
0163 D6 0000               A   671        CALL    _f_puts
                           A   672    ;   66                          sprintf(st
                           A   673    .line 66
0166 1CFF                  A   674        LD  R1,#255
0168 0CDC                  A   675        LD  R0,#220
016A 020F                  A   676        ADD R0,R15
016C 121E                  A   677        ADC R1,R14
016E 89E1FD                A   678        LDX -3(RR14),R1
0171 89E0FE                A   679        LDX -2(RR14),R0
0174 998EF6                A   680        LEA RR8,246(RR14)
0177 AC 00                 A   681        LD  R10,#high(L__15)
0179 BC 09                 A   682        LD  R11,#low(L__15)
017B D6 0000               A   683        CALL    ___print_putromstring0
017E 0C02                  A   684        LD  R0,#2
0180 89E0FA                A   685        LDX -6(RR14),R0
0183 0C60                  A   686        LD  R0,#96
0185 89E0F6                A   687        LDX -10(RR14),R0
0188 0C78                  A   688        LD  R0,#120
018A 89E0F9                A   689        LDX -7(RR14),R0
018D D6 0000               A   690        CALL    _checkFlash
0190 998EF6                A   691        LEA RR8,246(RR14)
0193 B0EA                  A   692        CLR R10
0195 E4E0EB                A   693        LD  R11,R0
0198 D6 0000               A   694        CALL    __u_ustoa
019B 998EF6                A   695        LEA RR8,246(RR14)
019E B0EA                  A   696        CLR R10
01A0 D6 0000               A   697        CALL    ___print_putch
                           A   698    ;   67                          puts(str);
                           A   699    .line 67
01A3 998EDC                A   700        LEA RR8,220(RR14)
01A6 D6 0000               A   701        CALL    _f_puts
                           A   702    ;   68                          break;
                           A   703    .line 68
01A9 8D 00 31              A   704        JR  _1_L_7
                           A   705    ;   69                      }
                           A   706    ;   70                      default:
01AC                       A   707    _1_L_6:
                           A   708    .line 70
                           A   709    ;   71                          puts("notF
                           A   710    .line 71
01AC 8C 00                 A   711        LD  R8,#high(L__16)
01AE 9C DA                 A   712        LD  R9,#low(L__16)
01B0 D6 0000               A   713        CALL    _f_puts
                           A   714    ;   72                          break;
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  15


PC     Object              F  Line    Source terminal.src
                           A   715    .line 72
01B3 8D 00 31              A   716        JR  _1_L_7
                           A   717    ;   73                  }
                           A   718    ;   74              }
                           A   719    ;   75              break;
                           A   720    ;   76          }   
                           A   721    ;   77          case CMD_STK_GET_SIGN_ON:
01B6                       A   722    _1_L_10:
                           A   723    .line 77
                           A   724    ;   78              //trigger_watchdog(); 
                           A   725    ;   79              if (inputch == STK_INS
                           A   726    .line 79
01B6 880EE6                A   727        LDX R0,-26(RR14)
01B9 A6E014                A   728        CP  R0,#20
01BC ED 03 3D              A   729        JR  NE,_1_L_39
                           A   730    ;   80                  string_response(ST
                           A   731    .line 80
01BF 8C 00                 A   732        LD  R8,#high(L__18)
01C1 9C 00                 A   733        LD  R9,#low(L__18)
01C3 D6 0000               A   734        CALL    _string_response
                           A   735    ;   81                  
                           A   736    ;   82              }
                           A   737    .line 82
                           A   738    ;   83              break;
                           A   739    .line 83
01C6 8D 03 3D              A   740        JR  _1_L_39
                           A   741    ;   84          case CMD_STK_GET_SYNC:
01C9                       A   742    _1_L_13:
                           A   743    .line 84
                           A   744    ;   85              sync_ok_response();
                           A   745    .line 85
01C9 D6 0000               A   746        CALL    _sync_ok_response
                           A   747    ;   86              break;
                           A   748    .line 86
01CC 8D 03 3D              A   749        JR  _1_L_39
                           A   750    ;   87          case CMD_STK_GET_PARAMETER
01CF                       A   751    _1_L_14:
                           A   752    .line 87
                           A   753    ;   88              {
                           A   754    ;   89                  // trigger_watchdo
                           A   755    ;   90                  char ch2 = getch()
                           A   756    .line 90
01CF D6 0000               A   757        CALL    _getch
01D2 89E1E9                A   758        LDX -23(RR14),R1
                           A   759    ;   91                  if(ch2 == PARAM_ST
                           A   760    .line 91
01D5 881EE9                A   761        LDX R1,-23(RR14)
01D8 E4E1E0                A   762        LD  R0,R1
01DB 90E0                  A   763        RL  R0
01DD 3200                  A   764        SBC R0,R0
01DF A6E180                A   765        CP  R1,#128
01E2 1FA6E000              A   766        CPC R0,#-0
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  16


PC     Object              F  Line    Source terminal.src
01E6 EB 08                 A   767        JR  NE,_1_L_22
01E8 8C02                  A   768        LD  R8,#2
01EA D6 0000               A   769        CALL    _byte_response
                           A   770    ;   92                  else if(ch2 == PAR
                           A   771    .line 92
01ED 8D 03 3D              A   772        JR  _1_L_39
01F0                       A   773    _1_L_22:
01F0 881EE9                A   774        LDX R1,-23(RR14)
01F3 E4E1E0                A   775        LD  R0,R1
01F6 90E0                  A   776        RL  R0
01F8 3200                  A   777        SBC R0,R0
01FA A6E181                A   778        CP  R1,#129
01FD 1FA6E000              A   779        CPC R0,#-0
0201 EB 08                 A   780        JR  NE,_1_L_20
0203 8C01                  A   781        LD  R8,#1
0205 D6 0000               A   782        CALL    _byte_response
                           A   783    ;   93                  else if(ch2 == PAR
                           A   784    .line 93
0208 8D 03 3D              A   785        JR  _1_L_39
020B                       A   786    _1_L_20:
020B 881EE9                A   787        LDX R1,-23(RR14)
020E E4E1E0                A   788        LD  R0,R1
0211 90E0                  A   789        RL  R0
0213 3200                  A   790        SBC R0,R0
0215 A6E182                A   791        CP  R1,#130
0218 1FA6E000              A   792        CPC R0,#-0
021C EB 08                 A   793        JR  NE,_1_L_18
021E 8C10                  A   794        LD  R8,#16
0220 D6 0000               A   795        CALL    _byte_response
                           A   796    ;   94                  else if(ch2 == PAR
                           A   797    .line 94
0223 8D 03 3D              A   798        JR  _1_L_39
0226                       A   799    _1_L_18:
0226 881EE9                A   800        LDX R1,-23(RR14)
0229 E4E1E0                A   801        LD  R0,R1
022C 90E0                  A   802        RL  R0
022E 3200                  A   803        SBC R0,R0
0230 A6E198                A   804        CP  R1,#152
0233 1FA6E000              A   805        CPC R0,#-0
0237 EB 08                 A   806        JR  NE,_1_L_16
0239 8C03                  A   807        LD  R8,#3
023B D6 0000               A   808        CALL    _byte_response
                           A   809    ;   95                  else byte_response
                           A   810    .line 95
023E 8D 03 3D              A   811        JR  _1_L_39
0241                       A   812    _1_L_16:
0241 B0E8                  A   813        CLR R8
0243 D6 0000               A   814        CALL    _byte_response
                           A   815    ;   96              }
                           A   816    .line 96
                           A   817    ;   97              break;
                           A   818    .line 97
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  17


PC     Object              F  Line    Source terminal.src
0246 8D 03 3D              A   819        JR  _1_L_39
                           A   820    ;   98          case CMD_STK_LOAD_ADDRESS:
0249                       A   821    _1_L_24:
                           A   822    .line 98
                           A   823    ;   99              {
                           A   824    ;  100                 // Load an address 
                           A   825    ;  101                 UINT16 newAddress;
                           A   826    ;  102                 newAddress = getch(
                           A   827    .line 102
0249 D6 0000               A   828        CALL    _getch
024C 89E0F4                A   829        LDX -12(RR14),R0
024F 89E1F5                A   830        LDX -11(RR14),R1
                           A   831    ;  103                 newAddress = (newAd
                           A   832    .line 103
0252 883EF5                A   833        LDX R3,-11(RR14)
0255 B0E2                  A   834        CLR R2
0257 89E2D7                A   835        LDX -41(RR14),R2
025A 89E3D6                A   836        LDX -42(RR14),R3
025D D6 0000               A   837        CALL    _getch
0260 883ED6                A   838        LDX R3,-42(RR14)
0263 882ED7                A   839        LDX R2,-41(RR14)
0266 4221                  A   840        OR  R2,R1
0268 89E2F4                A   841        LDX -12(RR14),R2
026B 89E3F5                A   842        LDX -11(RR14),R3
                           A   843    ;  104                 newAddress += newAd
                           A   844    .line 104
026E 882EF4                A   845        LDX R2,-12(RR14)
0271 883EF5                A   846        LDX R3,-11(RR14)
0274 E4E2E1                A   847        LD  R1,R2
0277 E4E3E0                A   848        LD  R0,R3
027A 0203                  A   849        ADD R0,R3
027C 1212                  A   850        ADC R1,R2
027E 89E1F4                A   851        LDX -12(RR14),R1
0281 89E0F5                A   852        LDX -11(RR14),R0
                           A   853    ;  105                 address = newAddres
                           A   854    .line 105
0284 880EF4                A   855        LDX R0,-12(RR14)
0287 881EF5                A   856        LDX R1,-11(RR14)
028A 940000                A   857        LDX _address,R0
028D 941001                A   858        LDX _address+1,R1
                           A   859    ;  106                 sync_ok_response();
                           A   860    .line 106
0290 D6 0000               A   861        CALL    _sync_ok_response
                           A   862    ;  107                 //trigger_watchdog(
                           A   863    ;  108              }
                           A   864    ;  109                 break;
                           A   865    .line 109
0293 8D 03 3D              A   866        JR  _1_L_39
                           A   867    ;  110          case CMD_STK_PROG_PAGE:
0296                       A   868    _1_L_25:
                           A   869    .line 110
                           A   870    ;  111          {
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  18


PC     Object              F  Line    Source terminal.src
                           A   871    ;  112              // Program a page, len
                           A   872    ;  113              // Program the flash m
                           A   873    ;  114              UINT8 *buffPtr;
                           A   874    ;  115              UINT16 addrPtr;
                           A   875    ;  116              getch(); // Skip bytes
                           A   876    .line 116
0296 D6 0000               A   877        CALL    _getch
                           A   878    ;  117              length = getch(); // C
                           A   879    .line 117
0299 D6 0000               A   880        CALL    _getch
029C 940000                A   881        LDX _length,R0
029F 941001                A   882        LDX _length+1,R1
                           A   883    ;  118              getch(); // Skip memty
                           A   884    .line 118
02A2 D6 0000               A   885        CALL    _getch
                           A   886    ;  119              
                           A   887    ;  120              // If we are in a RWW 
                           A   888    ;  121              //if(address < NRWWSTA
                           A   889    ;  122              
                           A   890    ;  123              // Read in the page co
                           A   891    ;  124              buffPtr = buff;
                           A   892    .line 124
02A5 0C01                  A   893        LD  R0,#1
02A7 B0E1                  A   894        CLR R1
02A9 89E0E7                A   895        LDX -25(RR14),R0
02AC 89E1E8                A   896        LDX -24(RR14),R1
                           A   897    ;  125              do *buffPtr++ = getch(
02AF                       A   898    _1_L_27:
                           A   899    .line 125
02AF 882EE7                A   900        LDX R2,-25(RR14)
02B2 883EE8                A   901        LDX R3,-24(RR14)
02B5 89E2D7                A   902        LDX -41(RR14),R2
02B8 89E3D6                A   903        LDX -42(RR14),R3
02BB D6 0000               A   904        CALL    _getch
02BE 883ED6                A   905        LDX R3,-42(RR14)
02C1 882ED7                A   906        LDX R2,-41(RR14)
02C4 1FE8EE2E E4           A   907        LDWX    RR4,RR2
02C9 96E1E4                A   908        LDX @RR4,R1
02CC 882EE7                A   909        LDX R2,-25(RR14)
02CF 883EE8                A   910        LDX R3,-24(RR14)
02D2 A0E2                  A   911        INCW    RR2
02D4 89E2E7                A   912        LDX -25(RR14),R2
02D7 89E3E8                A   913        LDX -24(RR14),R3
                           A   914    ;  126              while(--length); // th
                           A   915    .line 126
02DA 29010001              A   916        SUBX    _length+1,#1
02DE 39000000              A   917        SBCX    _length,#-0
02E2 840000                A   918        LDX R0,_length
02E5 48 001EE0             A   919        ORX R0,_length+1
02E9 EB C4                 A   920        JR  NE,_1_L_27
                           A   921    ;  127              
                           A   922    ;  128              // Check if we have a 
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  19


PC     Object              F  Line    Source terminal.src
                           A   923    ;  129              //trigger_watchdog(); 
                           A   924    ;  130              
                           A   925    ;  131              // Check if the erase 
                           A   926    ;  132              // check_if_pageerase_
                           A   927    ;  133              
                           A   928    ;  134              // Copy the buffer int
                           A   929    ;  135              buffPtr = buff;
                           A   930    .line 135
02EB 0C01                  A   931        LD  R0,#1
02ED B0E1                  A   932        CLR R1
02EF 89E0E7                A   933        LDX -25(RR14),R0
02F2 89E1E8                A   934        LDX -24(RR14),R1
                           A   935    ;  136              addrPtr = (UINT16)(voi
                           A   936    .line 136
02F5 840000                A   937        LDX R0,_address
02F8 841001                A   938        LDX R1,_address+1
02FB 89E0D8                A   939        LDX -40(RR14),R0
02FE 89E1D9                A   940        LDX -39(RR14),R1
                           A   941    ;  137              inputch = 1024 / 2;  /
                           A   942    .line 137
0301 B0E0                  A   943        CLR R0
0303 89E0E6                A   944        LDX -26(RR14),R0
                           A   945    ;  138              //do {
                           A   946    ;  139                  // TODO: Write int
                           A   947    ;  140              //} while(--inputch);
                           A   948    ;  141              
                           A   949    ;  142              // check_if_flashwrite
                           A   950    ;  143              
                           A   951    ;  144              sync_ok_response();
                           A   952    .line 144
0306 D6 0000               A   953        CALL    _sync_ok_response
                           A   954    ;  145          }
                           A   955    ;  146              break; 
                           A   956    .line 146
0309 8B 32                 A   957        JR  _1_L_39
                           A   958    ;  147          case CMD_STK_READ_PAGE:
030B                       A   959    _1_L_30:
                           A   960    .line 147
                           A   961    ;  148          {
                           A   962    ;  149              // Read the requested 
                           A   963    ;  150              getch(); // Skip bytes
                           A   964    .line 150
030B D6 0000               A   965        CALL    _getch
                           A   966    ;  151              length = getch(); // B
                           A   967    .line 151
030E D6 0000               A   968        CALL    _getch
0311 940000                A   969        LDX _length,R0
0314 941001                A   970        LDX _length+1,R1
                           A   971    ;  152              getch(); // Skip mem-t
                           A   972    .line 152
0317 D6 0000               A   973        CALL    _getch
                           A   974    ;  153              
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  20


PC     Object              F  Line    Source terminal.src
                           A   975    ;  154              sync_ok_response();
                           A   976    .line 154
031A D6 0000               A   977        CALL    _sync_ok_response
                           A   978    ;  155              
                           A   979    ;  156              // trigger_watchdog();
                           A   980    ;  157              // do putch(read_addre
                           A   981    ;  158              // while(--length);
                           A   982    ;  159          }
                           A   983    ;  160              break;
                           A   984    .line 160
031D 8B 1E                 A   985        JR  _1_L_39
                           A   986    ;  161          /*case CMD_STK_PROG_FLASH:
                           A   987    ;  162              // TODO: Program the d
                           A   988    ;  163              sync_ok_response();
                           A   989    ;  164              break;*/
                           A   990    ;  165          case CMD_STK_READ_SIGN:
031F                       A   991    _1_L_31:
                           A   992    .line 165
                           A   993    ;  166          {
                           A   994    ;  167              putch(STK_INSYNC);
                           A   995    .line 167
031F 8C14                  A   996        LD  R8,#20
0321 D6 0000               A   997        CALL    _putch
                           A   998    ;  168              // READ SIGN - return 
                           A   999    ;  169              putch(PROPS_SIGNATURE_
                           A  1000    .line 169
0324 8C1E                  A  1001        LD  R8,#30
0326 D6 0000               A  1002        CALL    _putch
                           A  1003    ;  170              putch(PROPS_SIGNATURE_
                           A  1004    .line 170
0329 8C95                  A  1005        LD  R8,#-107
032B D6 0000               A  1006        CALL    _putch
                           A  1007    ;  171              putch(PROPS_SIGNATURE_
                           A  1008    .line 171
032E 8C0F                  A  1009        LD  R8,#15
0330 D6 0000               A  1010        CALL    _putch
                           A  1011    ;  172              putch(STK_OK);
                           A  1012    .line 172
0333 8C10                  A  1013        LD  R8,#16
0335 D6 0000               A  1014        CALL    _putch
                           A  1015    ;  173          }
                           A  1016    ;  174              break;      
                           A  1017    .line 174
0338 8B 03                 A  1018        JR  _1_L_39
                           A  1019    ;  175          case CMD_STK_SET_DEVICE:
033A                       A  1020    _1_L_32:
                           A  1021    .line 175
                           A  1022    ;  176          case CMD_STK_SET_DEVICE_EX
033A                       A  1023    _1_L_33:
                           A  1024    .line 176
                           A  1025    ;  177          case CMD_STK_UNIVERSAL:
033A                       A  1026    _1_L_34:
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:29:23     page:  21


PC     Object              F  Line    Source terminal.src
                           A  1027    .line 177
                           A  1028    ;  178          case CMD_STK_CHIP_ERASE:
033A                       A  1029    _1_L_35:
                           A  1030    .line 178
                           A  1031    ;  179          case CMD_STK_SET_PARAMETER
033A                       A  1032    _1_L_36:
                           A  1033    .line 179
                           A  1034    ;  180          case CMD_STK_UNIVERSAL_MUL
033A                       A  1035    _1_L_37:
                           A  1036    .line 180
                           A  1037    ;  181          default:
033A                       A  1038    _1_L_38:
                           A  1039    .line 181
                           A  1040    ;  182              sync_ok_response();
                           A  1041    .line 182
033A D6 0000               A  1042        CALL    _sync_ok_response
                           A  1043    ;  183      }
033D                       A  1044    _1_L_39:
                           A  1045    .line 184
033D D6 0000               A  1046        CALL    __b_iframereset
0340 BF                    A  1047        IRET    
                           A  1048    .endfunc "isr_uart0_rx",184,"_isr_uart0_rx
                           A  1049        XREF _pageEraseFlash:ROM
                           A  1050        XREF _checkFlash:ROM
                           A  1051        XREF _string_response:ROM
                           A  1052        XREF _byte_response:ROM
                           A  1053        XREF _sync_ok_response:ROM
                           A  1054        XREF _getch:ROM
                           A  1055        XREF _f_puts:ROM
                           A  1056        XREF _putch:ROM
                           A  1057        XREF ___clr_print_fmt:ROM
                           A  1058        XREF __u_ustoa:ROM
                           A  1059        XREF ___print_putromstring0:ROM
                           A  1060        XREF ___print_putch:ROM
                           A  1061        XREF __b_ucase:ROM
                           A  1062        XREF __b_iframereset:ROM
                           A  1063        XREF __b_frameset0:ROM
                           A  1064        XREF __intrp:EDATA
                           A  1065        XDEF _isr_uart0_rx
                           A  1066        XDEF _character
                           A  1067        XDEF _length
                           A  1068        XDEF _address
                           A  1069        END


Errors: 0
Warnings: 0
Lines Assembled: 1070
