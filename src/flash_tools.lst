Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   1


PC     Object              F  Line    Source flash_tools.src
                           A     1    ; Z8 Encore! ANSI C Compiler Release 3.80
                           A     2    ; -nolocalcse -optsize -fastcall -const=RA
                           A     3    ; -nooptlink -noregvar -reduceopt -debug -
                           A     4    ; -alias 
                           A     5        DEFINE flash_tools_TEXT,SPACE=ROM
                           A     6        FILE    ".\flash_tools.c"
                           A     7    .debug "C"
                           A     8        SEGMENT ROM_DATA
                           A     9    
                           A    10    
                           A    11    ;**************************** _unlockFlash
                           A    12    ;Name                         Addr/Registe
                           A    13    
                           A    14    
                           A    15    ; Aggregate Stack Size: 0 (words)
                           A    16    
                           A    17    
                           A    18        .FRAME _n_unlockFlash,?_n_unlockFlash,
                           A    19        .FRAME _f_unlockFlash,?_f_unlockFlash,
                           A    20        SEGMENT flash_tools_TEXT
                           A    21    ;    1  #include "flash_tools.h"
                           A    22    ;    2  
                           A    23    ;    3  // Unlock the flash controller wit
                           A    24    ;    4  void unlockFlash(void) {
0000                       A    25    _unlockFlash:
                           A    26    .define "_unlockFlash"
                           A    27    .value _unlockFlash
                           A    28    .class 2
                           A    29    .type 65
                           A    30    .endef
                           A    31    .begfunc "unlockFlash",4,"_unlockFlash"
0000 D6 0000               A    32        CALL    __b_frameset00
                           A    33    ;    5      if (FCMD == 0x02 || FCMD == 0x
                           A    34    .line 5
0003 A9020FF8              A    35        CPX 4088,#2
0007 6B 1A                 A    36        JR  Z,_1_L_8
0009 A9030FF8              A    37        CPX 4088,#3
000D 6B 14                 A    38        JR  Z,_1_L_8
                           A    39    ;    6      FCMD = 0x73;  // First unlock 
                           A    40    .line 6
000F E9730FF8              A    41        LDX 4088,#115
                           A    42    ;    7      while (FCMD != 0x01); // Wait 
0013                       A    43    _1_L_3:
                           A    44    .line 7
0013 A9010FF8              A    45        CPX 4088,#1
0017 EB FA                 A    46        JR  NE,_1_L_3
                           A    47    ;    8  
                           A    48    ;    9      FCMD = 0x8C;  // Second unlock
                           A    49    .line 9
0019 E98C0FF8              A    50        LDX 4088,#140
                           A    51    ;   10      while (FCMD != 0x02); // Wait 
001D                       A    52    _1_L_6:
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   2


PC     Object              F  Line    Source flash_tools.src
                           A    53    .line 10
001D A9020FF8              A    54        CPX 4088,#2
0021 EB FA                 A    55        JR  NE,_1_L_6
                           A    56    ;   11  }
0023                       A    57    _1_L_8:
                           A    58    .line 11
0023 D6 0000               A    59        CALL    __b_framereset
0026 AF                    A    60        RET 
                           A    61    .endfunc "unlockFlash",11,"_unlockFlash"
                           A    62        SEGMENT ROM_DATA
                           A    63    
                           A    64    
                           A    65    ;**************************** _checkFlash 
                           A    66    ;Name                         Addr/Registe
                           A    67    
                           A    68    
                           A    69    ; Aggregate Stack Size: 0 (words)
                           A    70    
                           A    71    
                           A    72        .FRAME _n_checkFlash,?_n_checkFlash,RD
                           A    73        .FRAME _f_checkFlash,?_f_checkFlash,ED
                           A    74        SEGMENT flash_tools_TEXT
                           A    75    ;   12  
                           A    76    ;   13  // Return the Flash Controller Sta
                           A    77    ;   14  unsigned char checkFlash(void) {
0027                       A    78    _checkFlash:
                           A    79    .define "_checkFlash"
                           A    80    .value _checkFlash
                           A    81    .class 2
                           A    82    .type 76
                           A    83    .endef
                           A    84    .begfunc "checkFlash",14,"_checkFlash"
0027 D6 0000               A    85        CALL    __b_frameset00
                           A    86    ;   15      return FCMD;
                           A    87    .line 15
002A 840FF8                A    88        LDX R0,4088
                           A    89    ;   16  }
                           A    90    .line 16
002D D6 0000               A    91        CALL    __b_framereset
0030 AF                    A    92        RET 
                           A    93    .endfunc "checkFlash",16,"_checkFlash"
                           A    94        SEGMENT ROM_DATA
                           A    95    
                           A    96    
                           A    97    ;**************************** _pageEraseFl
                           A    98    ;Name                         Addr/Registe
                           A    99    ;_unlockFlash                        IMPOR
                           A   100    ;pageNum                             RR14-
                           A   101    ;i                                   RR14-
                           A   102    ;address                             RR14-
                           A   103    
                           A   104    
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   3


PC     Object              F  Line    Source flash_tools.src
                           A   105    ; Aggregate Stack Size: -7 (words)
                           A   106    
                           A   107    
                           A   108        .FRAME _n_pageEraseFlash,?_n_pageErase
                           A   109        .FCALL _n_unlockFlash
                           A   110        .FRAME _f_pageEraseFlash,?_f_pageErase
                           A   111        .FCALL _f_unlockFlash
                           A   112        SEGMENT flash_tools_TEXT
                           A   113    ;   17  
                           A   114    ;   18  int pageEraseFlash(unsigned long a
0031                       A   115    _pageEraseFlash:
                           A   116    .define "_pageEraseFlash"
                           A   117    .value _pageEraseFlash
                           A   118    .class 2
                           A   119    .type 67
                           A   120    .endef
                           A   121    .begfunc "pageEraseFlash",18,"_pageEraseFl
0031 5C07                  A   122        LD  R5,#7
0033 D6 0000               A   123        CALL    __b_frameset0
                           A   124    .line 18
0036 89E8FC                A   125        LDX -4(RR14),R8
0039 89E9FD                A   126        LDX -3(RR14),R9
003C 89EAFE                A   127        LDX -2(RR14),R10
003F 89EBFF                A   128        LDX -1(RR14),R11
                           A   129    .define "address"
                           A   130    .class 9
                           A   131    .value -4
                           A   132    .type 15
                           A   133    .endef
                           A   134    .define "i"
                           A   135    .class 1
                           A   136    .value -6
                           A   137    .type 3
                           A   138    .endef
                           A   139    .define "pageNum"
                           A   140    .class 1
                           A   141    .value -7
                           A   142    .type 12
                           A   143    .endef
                           A   144    ;   19      unsigned char pageNum;
                           A   145    ;   20      int i = 0;
                           A   146    .line 20
0042 B0E0                  A   147        CLR R0
0044 B0E1                  A   148        CLR R1
0046 89E0FA                A   149        LDX -6(RR14),R0
0049 89E1FB                A   150        LDX -5(RR14),R1
                           A   151    ;   21      
                           A   152    ;   22      if (FCMD == 0x03) return -1;
                           A   153    .line 22
004C A9030FF8              A   154        CPX 4088,#3
0050 EB 06                 A   155        JR  NE,_3_L_11
0052 0CFF                  A   156        LD  R0,#255
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   4


PC     Object              F  Line    Source flash_tools.src
0054 1CFF                  A   157        LD  R1,#255
0056 8B 7B                 A   158        JR  _3_L_24
0058                       A   159    _3_L_11:
                           A   160    ;   23      
                           A   161    ;   24      // Calculate page number from 
                           A   162    ;   25      pageNum = (unsigned char)((add
                           A   163    .line 25
0058 881EFC                A   164        LDX R1,-4(RR14)
005B 882EFD                A   165        LDX R2,-3(RR14)
005E 883EFE                A   166        LDX R3,-2(RR14)
0061 880EFF                A   167        LDX R0,-1(RR14)
0064 4C09                  A   168        LD  R4,#9
0066                       A   169    L__12:
0066 1FC0E1                A   170        SRL R1
0069 C0E2                  A   171        RRC R2
006B C0E3                  A   172        RRC R3
006D C0E0                  A   173        RRC R0
006F 4A F5                 A   174        DJNZ    R4,L__12
0071 89E0F9                A   175        LDX -7(RR14),R0
0074 8B 11                 A   176        JR  _3_L_13
                           A   177    ;   26      
                           A   178    ;   27      // According to the flow diagr
                           A   179    ;   28      for (i = 0; i < 1; i++) {
0076                       A   180    _3_L_14:
                           A   181    .line 28
0076 880EFA                A   182        LDX R0,-6(RR14)
0079 881EFB                A   183        LDX R1,-5(RR14)
007C A6E101                A   184        CP  R1,#1
007F 1FA6E000              A   185        CPC R0,#-0
0083 1B 0C                 A   186        JR  LT,_3_L_16
0085 8B 2D                 A   187        JR  _3_L_17
0087                       A   188    _3_L_13:
0087 B0E0                  A   189        CLR R0
0089 B0E1                  A   190        CLR R1
008B 89E0FA                A   191        LDX -6(RR14),R0
008E 89E1FB                A   192        LDX -5(RR14),R1
0091                       A   193    _3_L_16:
                           A   194    ;   29          // Set page number for era
                           A   195    ;   30          PAGE = pageNum;
                           A   196    .line 30
0091 880EF9                A   197        LDX R0,-7(RR14)
0094 940FF9                A   198        LDX 4089,R0
                           A   199    ;   31          // Unlock Flash
                           A   200    ;   32          unlockFlash();
                           A   201    .line 32
0097 D6 0000               A   202        CALL    _unlockFlash
                           A   203    ;   33          // Set page number for era
                           A   204    ;   34          PAGE = pageNum;
                           A   205    .line 34
009A 880EF9                A   206        LDX R0,-7(RR14)
009D 940FF9                A   207        LDX 4089,R0
                           A   208    ;   35          // Erase
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   5


PC     Object              F  Line    Source flash_tools.src
                           A   209    ;   36          FCMD = 0x95;
                           A   210    .line 36
00A0 E9950FF8              A   211        LDX 4088,#149
                           A   212    .line 28
00A4 880EFA                A   213        LDX R0,-6(RR14)
00A7 881EFB                A   214        LDX R1,-5(RR14)
00AA A0E0                  A   215        INCW    RR0
00AC 89E0FA                A   216        LDX -6(RR14),R0
00AF 89E1FB                A   217        LDX -5(RR14),R1
                           A   218    ;   37      }
                           A   219    .line 37
00B2 8B C2                 A   220        JR  _3_L_14
                           A   221    ;   38      
                           A   222    ;   39      // Wait for erase to complete 
                           A   223    ;   40      while (FCMD != 0x00);   
00B4                       A   224    _3_L_17:
                           A   225    .line 40
00B4 A9000FF8              A   226        CPX 4088,#-0
00B8 EB FA                 A   227        JR  NE,_3_L_17
                           A   228    ;   41      
                           A   229    ;   42      ///////// UNLOCK THE PAGE ////
                           A   230    ;   43      
                           A   231    ;   44      // Set page number for erase
                           A   232    ;   45      PAGE = pageNum;
                           A   233    .line 45
00BA 880EF9                A   234        LDX R0,-7(RR14)
00BD 940FF9                A   235        LDX 4089,R0
                           A   236    ;   46  
                           A   237    ;   47      // Unlock Flash
                           A   238    ;   48      unlockFlash();
                           A   239    .line 48
00C0 D6 0000               A   240        CALL    _unlockFlash
                           A   241    ;   49      
                           A   242    ;   50      // Set page number for erase
                           A   243    ;   51      PAGE = pageNum;
                           A   244    .line 51
00C3 880EF9                A   245        LDX R0,-7(RR14)
00C6 940FF9                A   246        LDX 4089,R0
                           A   247    ;   52      
                           A   248    ;   53      
                           A   249    ;   54      // Todo: Optionally, verify er
                           A   250    ;   55      //if (FCMD == 0x00) return -1;
                           A   251    ;   56      // Wait for unlock to complete
                           A   252    ;   57      while (FCMD != 0x03);
00C9                       A   253    _3_L_21:
                           A   254    .line 57
00C9 A9030FF8              A   255        CPX 4088,#3
00CD EB FA                 A   256        JR  NE,_3_L_21
                           A   257    ;   58      return 0; // Success
                           A   258    .line 58
00CF B0E0                  A   259        CLR R0
00D1 B0E1                  A   260        CLR R1
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   6


PC     Object              F  Line    Source flash_tools.src
                           A   261    ;   59  }
00D3                       A   262    _3_L_24:
                           A   263    .line 59
00D3 D6 0000               A   264        CALL    __b_framereset
00D6 AF                    A   265        RET 
                           A   266    .endfunc "pageEraseFlash",59,"_pageEraseFl
                           A   267        SEGMENT ROM_DATA
                           A   268    
                           A   269    
                           A   270    ;**************************** _massEraseFl
                           A   271    ;Name                         Addr/Registe
                           A   272    
                           A   273    
                           A   274    ; Aggregate Stack Size: 0 (words)
                           A   275    
                           A   276    
                           A   277        .FRAME _n_massEraseFlash,?_n_massErase
                           A   278        .FRAME _f_massEraseFlash,?_f_massErase
                           A   279        SEGMENT flash_tools_TEXT
                           A   280    ;   60  
                           A   281    ;   61  void massEraseFlash(void) {
00D7                       A   282    _massEraseFlash:
                           A   283    .define "_massEraseFlash"
                           A   284    .value _massEraseFlash
                           A   285    .class 2
                           A   286    .type 65
                           A   287    .endef
                           A   288    .begfunc "massEraseFlash",61,"_massEraseFl
00D7 D6 0000               A   289        CALL    __b_frameset00
                           A   290    ;   62      if (FCMD == 0x03) return;
                           A   291    .line 62
00DA A9030FF8              A   292        CPX 4088,#3
00DE 6B 0A                 A   293        JR  Z,_4_L_29
                           A   294    ;   63      FCMD = 0x63; // Mass Erase com
                           A   295    .line 63
00E0 E9630FF8              A   296        LDX 4088,#99
                           A   297    ;   64      while (FCMD != 0x03); // Wait 
00E4                       A   298    _4_L_27:
                           A   299    .line 64
00E4 A9030FF8              A   300        CPX 4088,#3
00E8 EB FA                 A   301        JR  NE,_4_L_27
                           A   302    ;   65  }
00EA                       A   303    _4_L_29:
                           A   304    .line 65
00EA D6 0000               A   305        CALL    __b_framereset
00ED AF                    A   306        RET 
                           A   307    .endfunc "massEraseFlash",65,"_massEraseFl
                           A   308        XREF __b_framereset:ROM
                           A   309        XREF __b_frameset0:ROM
                           A   310        XREF __b_frameset00:ROM
                           A   311        XDEF _massEraseFlash
                           A   312        XDEF _pageEraseFlash
Zilog eZ8 Encore! Macro Assembler Version 2.53 (20121701) 27-May-25     03:45:27     page:   7


PC     Object              F  Line    Source flash_tools.src
                           A   313        XDEF _checkFlash
                           A   314        XDEF _unlockFlash
                           A   315        END


Errors: 0
Warnings: 0
Lines Assembled: 316
